struct test_vector_st {
  const char *desc;
  const char *alg;
  size_t blocklen;
  const char *key;
  size_t klen;
  const char *iv;
  size_t ivlen;
  const char *ptext;
  size_t len;
  const char *aad;
  size_t aadlen;
  const char *ctext;
  const char *tag;
  size_t tlen;
};

static struct test_vector_st vectors[] = {
  { /* These are RFC3602 test vectors for AES-CBC */
    .desc	= "RFC3602 Case #1: Encrypting 16 bytes (1 block) using AES-CBC with 128-bit key",
    .alg	= "cbc(aes)",
    .blocklen	= 16,
    .key	= "\x06\xa9\x21\x40\x36\xb8\xa1\x5b"
		  "\x51\x2e\x03\xd5\x34\x12\x00\x06",
    .klen	= 16,
    .iv		= "\x3d\xaf\xba\x42\x9d\x9e\xb4\x30"
		  "\xb4\x22\xda\x80\x2c\x9f\xac\x41",
    .ivlen	= 16,
    .ptext	= "Single block msg",
    .len	= 16,
    .ctext	= "\xe3\x53\x77\x9c\x10\x79\xae\xb8"
		  "\x27\x08\x94\x2d\xbe\x77\x18\x1a",
  }, {
    .desc	= "RFC3602 Case #2: Encrypting 32 bytes (2 blocks) using AES-CBC with 128-bit key",
    .alg	= "cbc(aes)",
    .blocklen	= 16,
    .key	= "\xc2\x86\x69\x6d\x88\x7c\x9a\xa0"
		  "\x61\x1b\xbb\x3e\x20\x25\xa4\x5a",
    .klen	= 16,
    .iv		= "\x56\x2e\x17\x99\x6d\x09\x3d\x28"
		  "\xdd\xb3\xba\x69\x5a\x2e\x6f\x58",
    .ivlen	= 16,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f",
    .len	= 32,
    .ctext	= "\xd2\x96\xcd\x94\xc2\xcc\xcf\x8a"
		  "\x3a\x86\x30\x28\xb5\xe1\xdc\x0a"
		  "\x75\x86\x60\x2d\x25\x3c\xff\xf9"
		  "\x1b\x82\x66\xbe\xa6\xd6\x1a\xb1",
  }, {
    .desc	= "RFC3602 Case #3: Encrypting 48 bytes (3 blocks) using AES-CBC with 128-bit key",
    .alg	= "cbc(aes)",
    .blocklen	= 16,
    .key	= "\x6c\x3e\xa0\x47\x76\x30\xce\x21"
		  "\xa2\xce\x33\x4a\xa7\x46\xc2\xcd",
    .klen	= 16,
    .iv		= "\xc7\x82\xdc\x4c\x09\x8c\x66\xcb"
		  "\xd9\xcd\x27\xd8\x25\x68\x2c\x81",
    .ivlen	= 16,
    .ptext	= "This is a 48-byte message (exactly 3 AES blocks)",
    .len	= 48,
    .ctext	= "\xd0\xa0\x2b\x38\x36\x45\x17\x53"
		  "\xd4\x93\x66\x5d\x33\xf0\xe8\x86"
		  "\x2d\xea\x54\xcd\xb2\x93\xab\xc7"
		  "\x50\x69\x39\x27\x67\x72\xf8\xd5"
		  "\x02\x1c\x19\x21\x6b\xad\x52\x5c"
		  "\x85\x79\x69\x5d\x83\xba\x26\x84",
  }, {
    .desc	= "RFC3602 Case #4: Encrypting 64 bytes (4 blocks) using AES-CBC with 128-bit key",
    .alg	= "cbc(aes)",
    .blocklen	= 16,
    .key	= "\x56\xe4\x7a\x38\xc5\x59\x89\x74"
		  "\xbc\x46\x90\x3d\xba\x29\x03\x49",
    .klen	= 16,
    .iv		= "\x8c\xe8\x2e\xef\xbe\xa0\xda\x3c"
		  "\x44\x69\x9e\xd7\xdb\x51\xb7\xd9",
    .ivlen	= 16,
    .ptext	= "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7"
		  "\xa8\xa9\xaa\xab\xac\xad\xae\xaf"
		  "\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7"
		  "\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
		  "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7"
		  "\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf"
		  "\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7"
		  "\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf",
    .len	= 64,
    .ctext	= "\xc3\x0e\x32\xff\xed\xc0\x77\x4e"
		  "\x6a\xff\x6a\xf0\x86\x9f\x71\xaa"
		  "\x0f\x3a\xf0\x7a\x9a\x31\xa9\xc6"
		  "\x84\xdb\x20\x7e\xb0\xef\x8e\x4e"
		  "\x35\x90\x7a\xa6\x32\xc3\xff\xdf"
		  "\x86\x8b\xb7\xb2\x9d\x3d\x46\xad"
		  "\x83\xce\x9f\x9a\x10\x2e\xe9\x9d"
		  "\x49\xa5\x3e\x87\xf4\xc3\xda\x55",
  }, { /* These are linux kernel test vectors in crypto/testmgr.h */
    .desc	= "linux kernel AES-CBC TV#2 From NIST SP800-38A",
    .alg	= "cbc(aes)",
    .blocklen	= 16,
    .key	= "\x8e\x73\xb0\xf7\xda\x0e\x64\x52"
		  "\xc8\x10\xf3\x2b\x80\x90\x79\xe5"
		  "\x62\xf8\xea\xd2\x52\x2c\x6b\x7b",
    .klen	= 24,
    .iv		= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
    .ivlen	= 16,
    .ptext	= "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
		  "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
		  "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
		  "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
		  "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
		  "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
		  "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
		  "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
    .len	= 64,
    .ctext	= "\x4f\x02\x1d\xb2\x43\xbc\x63\x3d"
		  "\x71\x78\x18\x3a\x9f\xa0\x71\xe8"
		  "\xb4\xd9\xad\xa9\xad\x7d\xed\xf4"
		  "\xe5\xe7\x38\x76\x3f\x69\x14\x5a"
		  "\x57\x1b\x24\x20\x12\xfb\x7a\xe0"
		  "\x7f\xa9\xba\xac\x3d\xf1\x02\xe0"
		  "\x08\xb0\xe2\x79\x88\x59\x88\x81"
		  "\xd9\x20\xa9\xe6\x4f\x56\x15\xcd",
  }, {
    .desc	= "linux kernel AES-CBC TV#3 From NIST SP800-38A",
    .alg	= "cbc(aes)",
    .blocklen	= 16,
    .key	= "\x60\x3d\xeb\x10\x15\xca\x71\xbe"
		  "\x2b\x73\xae\xf0\x85\x7d\x77\x81"
		  "\x1f\x35\x2c\x07\x3b\x61\x08\xd7"
		  "\x2d\x98\x10\xa3\x09\x14\xdf\xf4",
    .klen	= 32,
    .iv		= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
    .ivlen	= 16,
    .ptext	= "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
		  "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
		  "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
		  "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
		  "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
		  "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
		  "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
		  "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
    .len	= 64,
    .ctext	= "\xf5\x8c\x4c\x04\xd6\xe5\xf1\xba"
		  "\x77\x9e\xab\xfb\x5f\x7b\xfb\xd6"
		  "\x9c\xfc\x4e\x96\x7e\xdb\x80\x8d"
		  "\x67\x9f\x77\x7b\xc6\x70\x2c\x7d"
		  "\x39\xf2\x33\x69\xa9\xd9\xba\xcf"
		  "\xa5\x30\xe2\x63\x04\x23\x14\x61"
		  "\xb2\xeb\x05\xe2\xc3\x9b\xe9\xfc"
		  "\xda\x6c\x19\x07\x8c\x6a\x9d\x1b",
  }, {
    .desc	= "linux kernel AES-CBC TV#4 Generated with Crypto++",
    .alg	= "cbc(aes)",
    .blocklen	= 16,
    .key	= "\xC9\x83\xA6\xC9\xEC\x0F\x32\x55"
		  "\x0F\x32\x55\x78\x9B\xBE\x78\x9B"
		  "\xBE\xE1\x04\x27\xE1\x04\x27\x4A"
		  "\x6D\x90\x4A\x6D\x90\xB3\xD6\xF9",
    .klen	= 32,
    .iv		= "\xE7\x82\x1D\xB8\x53\x11\xAC\x47"
		  "\xE2\x7D\x18\xD6\x71\x0C\xA7\x42",
    .ivlen	= 16,
    .ptext	= "\x50\xB9\x22\xAE\x17\x80\x0C\x75"
		  "\xDE\x47\xD3\x3C\xA5\x0E\x9A\x03"
		  "\x6C\xF8\x61\xCA\x33\xBF\x28\x91"
		  "\x1D\x86\xEF\x58\xE4\x4D\xB6\x1F"
		  "\xAB\x14\x7D\x09\x72\xDB\x44\xD0"
		  "\x39\xA2\x0B\x97\x00\x69\xF5\x5E"
		  "\xC7\x30\xBC\x25\x8E\x1A\x83\xEC"
		  "\x55\xE1\x4A\xB3\x1C\xA8\x11\x7A"
		  "\x06\x6F\xD8\x41\xCD\x36\x9F\x08"
		  "\x94\xFD\x66\xF2\x5B\xC4\x2D\xB9"
		  "\x22\x8B\x17\x80\xE9\x52\xDE\x47"
		  "\xB0\x19\xA5\x0E\x77\x03\x6C\xD5"
		  "\x3E\xCA\x33\x9C\x05\x91\xFA\x63"
		  "\xEF\x58\xC1\x2A\xB6\x1F\x88\x14"
		  "\x7D\xE6\x4F\xDB\x44\xAD\x16\xA2"
		  "\x0B\x74\x00\x69\xD2\x3B\xC7\x30"
		  "\x99\x02\x8E\xF7\x60\xEC\x55\xBE"
		  "\x27\xB3\x1C\x85\x11\x7A\xE3\x4C"
		  "\xD8\x41\xAA\x13\x9F\x08\x71\xFD"
		  "\x66\xCF\x38\xC4\x2D\x96\x22\x8B"
		  "\xF4\x5D\xE9\x52\xBB\x24\xB0\x19"
		  "\x82\x0E\x77\xE0\x49\xD5\x3E\xA7"
		  "\x10\x9C\x05\x6E\xFA\x63\xCC\x35"
		  "\xC1\x2A\x93\x1F\x88\xF1\x5A\xE6"
		  "\x4F\xB8\x21\xAD\x16\x7F\x0B\x74"
		  "\xDD\x46\xD2\x3B\xA4\x0D\x99\x02"
		  "\x6B\xF7\x60\xC9\x32\xBE\x27\x90"
		  "\x1C\x85\xEE\x57\xE3\x4C\xB5\x1E"
		  "\xAA\x13\x7C\x08\x71\xDA\x43\xCF"
		  "\x38\xA1\x0A\x96\xFF\x68\xF4\x5D"
		  "\xC6\x2F\xBB\x24\x8D\x19\x82\xEB"
		  "\x54\xE0\x49\xB2\x1B\xA7\x10\x79"
		  "\x05\x6E\xD7\x40\xCC\x35\x9E\x07"
		  "\x93\xFC\x65\xF1\x5A\xC3\x2C\xB8"
		  "\x21\x8A\x16\x7F\xE8\x51\xDD\x46"
		  "\xAF\x18\xA4\x0D\x76\x02\x6B\xD4"
		  "\x3D\xC9\x32\x9B\x04\x90\xF9\x62"
		  "\xEE\x57\xC0\x29\xB5\x1E\x87\x13"
		  "\x7C\xE5\x4E\xDA\x43\xAC\x15\xA1"
		  "\x0A\x73\xFF\x68\xD1\x3A\xC6\x2F"
		  "\x98\x01\x8D\xF6\x5F\xEB\x54\xBD"
		  "\x26\xB2\x1B\x84\x10\x79\xE2\x4B"
		  "\xD7\x40\xA9\x12\x9E\x07\x70\xFC"
		  "\x65\xCE\x37\xC3\x2C\x95\x21\x8A"
		  "\xF3\x5C\xE8\x51\xBA\x23\xAF\x18"
		  "\x81\x0D\x76\xDF\x48\xD4\x3D\xA6"
		  "\x0F\x9B\x04\x6D\xF9\x62\xCB\x34"
		  "\xC0\x29\x92\x1E\x87\xF0\x59\xE5"
		  "\x4E\xB7\x20\xAC\x15\x7E\x0A\x73"
		  "\xDC\x45\xD1\x3A\xA3\x0C\x98\x01"
		  "\x6A\xF6\x5F\xC8\x31\xBD\x26\x8F"
		  "\x1B\x84\xED\x56\xE2\x4B\xB4\x1D"
		  "\xA9\x12\x7B\x07\x70\xD9\x42\xCE"
		  "\x37\xA0\x09\x95\xFE\x67\xF3\x5C"
		  "\xC5\x2E\xBA\x23\x8C\x18\x81\xEA"
		  "\x53\xDF\x48\xB1\x1A\xA6\x0F\x78"
		  "\x04\x6D\xD6\x3F\xCB\x34\x9D\x06"
		  "\x92\xFB\x64\xF0\x59\xC2\x2B\xB7"
		  "\x20\x89\x15\x7E\xE7\x50\xDC\x45"
		  "\xAE\x17\xA3\x0C\x75\x01\x6A\xD3"
		  "\x3C\xC8\x31\x9A\x03\x8F\xF8\x61"
		  "\xED\x56\xBF\x28\xB4\x1D\x86\x12",
    .len	= 496,
    .ctext	= "\xEA\x65\x8A\x19\xB0\x66\xC1\x3F"
		  "\xCE\xF1\x97\x75\xC1\xFD\xB5\xAF"
		  "\x52\x65\xF7\xFF\xBC\xD8\x2D\x9F"
		  "\x2F\xB9\x26\x9B\x6F\x10\xB7\xB8"
		  "\x26\xA1\x02\x46\xA2\xAD\xC6\xC0"
		  "\x11\x15\xFF\x6D\x1E\x82\x04\xA6"
		  "\xB1\x74\xD1\x08\x13\xFD\x90\x7C"
		  "\xF5\xED\xD3\xDB\x5A\x0A\x0C\x2F"
		  "\x0A\x70\xF1\x88\x07\xCF\x21\x26"
		  "\x40\x40\x8A\xF5\x53\xF7\x24\x4F"
		  "\x83\x38\x43\x5F\x08\x99\xEB\xE3"
		  "\xDC\x02\x64\x67\x50\x6E\x15\xC3"
		  "\x01\x1A\xA0\x81\x13\x65\xA6\x73"
		  "\x71\xA6\x3B\x91\x83\x77\xBE\xFA"
		  "\xDB\x71\x73\xA6\xC1\xAE\x43\xC3"
		  "\x36\xCE\xD6\xEB\xF9\x30\x1C\x4F"
		  "\x80\x38\x5E\x9C\x6E\xAB\x98\x2F"
		  "\x53\xAF\xCF\xC8\x9A\xB8\x86\x43"
		  "\x3E\x86\xE7\xA1\xF4\x2F\x30\x40"
		  "\x03\xA8\x6C\x50\x42\x9F\x77\x59"
		  "\x89\xA0\xC5\xEC\x9A\xB8\xDD\x99"
		  "\x16\x24\x02\x07\x48\xAE\xF2\x31"
		  "\x34\x0E\xC3\x85\xFE\x1C\x95\x99"
		  "\x87\x58\x98\x8B\xE7\xC6\xC5\x70"
		  "\x73\x81\x07\x7C\x56\x2F\xD8\x1B"
		  "\xB7\xB9\x2B\xAB\xE3\x01\x87\x0F"
		  "\xD8\xBB\xC0\x0D\xAC\x2C\x2F\x98"
		  "\x3C\x0B\xA2\x99\x4A\x8C\xF7\x04"
		  "\xE0\xE0\xCF\xD1\x81\x5B\xFE\xF5"
		  "\x24\x04\xFD\xB8\xDF\x13\xD8\xCD"
		  "\xF1\xE3\x3D\x98\x50\x02\x77\x9E"
		  "\xBC\x22\xAB\xFA\xC2\x43\x1F\x66"
		  "\x20\x02\x23\xDA\xDF\xA0\x89\xF6"
		  "\xD8\xF3\x45\x24\x53\x6F\x16\x77"
		  "\x02\x3E\x7B\x36\x5F\xA0\x3B\x78"
		  "\x63\xA2\xBD\xB5\xA4\xCA\x1E\xD3"
		  "\x57\xBC\x0B\x9F\x43\x51\x28\x4F"
		  "\x07\x50\x6C\x68\x12\x07\xCF\xFA"
		  "\x6B\x72\x0B\xEB\xF8\x88\x90\x2C"
		  "\x7E\xF5\x91\xD1\x03\xD8\xD5\xBD"
		  "\x22\x39\x7B\x16\x03\x01\x69\xAF"
		  "\x3D\x38\x66\x28\x0C\xBE\x5B\xC5"
		  "\x03\xB4\x2F\x51\x8A\x56\x17\x2B"
		  "\x88\x42\x6D\x40\x68\x8F\xD0\x11"
		  "\x19\xF9\x1F\x43\x79\x95\x31\xFA"
		  "\x28\x7A\x3D\xF7\x66\xEB\xEF\xAC"
		  "\x06\xB2\x01\xAD\xDB\x68\xDB\xEC"
		  "\x8D\x53\x6E\x72\x68\xA3\xC7\x63"
		  "\x43\x2B\x78\xE0\x04\x29\x8F\x72"
		  "\xB2\x2C\xE6\x84\x03\x30\x6D\xCD"
		  "\x26\x92\x37\xE1\x2F\xBB\x8B\x9D"
		  "\xE4\x4C\xF6\x93\xBC\xD9\xAD\x44"
		  "\x52\x65\xC7\xB0\x0E\x3F\x0E\x61"
		  "\x56\x5D\x1C\x6D\xA7\x05\x2E\xBC"
		  "\x58\x08\x15\xAB\x12\xAB\x17\x4A"
		  "\x5E\x1C\xF2\xCD\xB8\xA2\xAE\xFB"
		  "\x9B\x2E\x0E\x85\x34\x80\x0E\x3F"
		  "\x4C\xB8\xDB\xCE\x1C\x90\xA1\x61"
		  "\x6C\x69\x09\x35\x9E\xD4\xF4\xAD"
		  "\xBC\x06\x41\xE3\x01\xB4\x4E\x0A"
		  "\xE0\x1F\x91\xF8\x82\x96\x2D\x65"
		  "\xA3\xAA\x13\xCC\x50\xFF\x7B\x02",
  }, { /* These are RFC3686 test vectors adapted for AES-CTR */
    .desc	= "RFC3686 TV #1 adpated for regular CTR: Encrypting 16 octets using AES-CTR with 128-bit key",
    .alg	= "ctr(aes)",
    .blocklen	= 16,
    .key	= "\xAE\x68\x52\xF8\x12\x10\x67\xCC"
		  "\x4B\xF7\xA5\x76\x55\x77\xF3\x9E",
    .klen	= 16,
    .iv		= "\x00\x00\x00\x30\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x01",
    .ivlen	= 16,
    .ptext	= "Single block msg",
    .len	= 16,
    .ctext	= "\xE4\x09\x5D\x4F\xB7\xA7\xB3\x79"
		  "\x2D\x61\x75\xA3\x26\x13\x11\xB8",
  }, {
    .desc	= "RFC3686 TV #2 adpated for regular CTR: Encrypting 32 octets using AES-CTR with 128-bit key",
    .alg	= "ctr(aes)",
    .blocklen	= 16,
    .key	= "\x7E\x24\x06\x78\x17\xFA\xE0\xD7"
		  "\x43\xD6\xCE\x1F\x32\x53\x91\x63",
    .klen	= 16,
    .iv		= "\x00\x6C\xB6\xDB\xC0\x54\x3B\x59"
		  "\xDA\x48\xD9\x0B\x00\x00\x00\x01",
    .ivlen	= 16,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F",
    .len	= 32,
    .ctext	= "\x51\x04\xA1\x06\x16\x8A\x72\xD9"
		  "\x79\x0D\x41\xEE\x8E\xDA\xD3\x88"
		  "\xEB\x2E\x1E\xFC\x46\xDA\x57\xC8"
		  "\xFC\xE6\x30\xDF\x91\x41\xBE\x28",
  }, {
    .desc	= "RFC3686 TV#3 adpated for regular CTR: Encrypting 36 octets using AES-CTR with 128-bit key",
    .alg	= "ctr(aes)",
    .blocklen	= 16,
    .key	= "\x76\x91\xBE\x03\x5E\x50\x20\xA8"
		  "\xAC\x6E\x61\x85\x29\xF9\xA0\xDC",
    .klen	= 16,
    .iv		= "\x00\xE0\x01\x7B\x27\x77\x7F\x3F"
		  "\x4A\x17\x86\xF0\x00\x00\x00\x01",
    .ivlen	= 16,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
		  "\x20\x21\x22\x23",
    .len	= 36,
    .ctext	= "\xC1\xCF\x48\xA8\x9F\x2F\xFD\xD9"
		  "\xCF\x46\x52\xE9\xEF\xDB\x72\xD7"
		  "\x45\x40\xA4\x2B\xDE\x6D\x78\x36"
		  "\xD5\x9A\x5C\xEA\xAE\xF3\x10\x53"
		  "\x25\xB2\x07\x2F",
  }, {
    .desc	= "RFC3686 TV#4 adpated for regular CTR: Encrypting 16 octets using AES-CTR with 192-bit key",
    .alg	= "ctr(aes)",
    .blocklen	= 16,
    .key	= "\x16\xAF\x5B\x14\x5F\xC9\xF5\x79"
		  "\xC1\x75\xF9\x3E\x3B\xFB\x0E\xED"
		  "\x86\x3D\x06\xCC\xFD\xB7\x85\x15",
    .klen	= 24,
    .iv		= "\x00\x00\x00\x48\x36\x73\x3C\x14"
		  "\x7D\x6D\x93\xCB\x00\x00\x00\x01",
    .ivlen	= 16,
    .ptext	= "Single block msg",
    .len	= 16,
    .ctext	= "\x4B\x55\x38\x4F\xE2\x59\xC9\xC8"
		  "\x4E\x79\x35\xA0\x03\xCB\xE9\x28",
  }, {
    .desc	= "RFC3686 TV#5 adpated for regular CTR: Encrypting 32 octets using AES-CTR with 192-bit key",
    .alg	= "ctr(aes)",
    .blocklen	= 16,
    .key	= "\x7C\x5C\xB2\x40\x1B\x3D\xC3\x3C"
		  "\x19\xE7\x34\x08\x19\xE0\xF6\x9C"
		  "\x67\x8C\x3D\xB8\xE6\xF6\xA9\x1A",
    .klen	= 24,
    .iv		= "\x00\x96\xB0\x3B\x02\x0C\x6E\xAD"
		  "\xC2\xCB\x50\x0D\x00\x00\x00\x01",
    .ivlen	= 16,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F",
    .len	= 32,
    .ctext	= "\x45\x32\x43\xFC\x60\x9B\x23\x32"
		  "\x7E\xDF\xAA\xFA\x71\x31\xCD\x9F"
		  "\x84\x90\x70\x1C\x5A\xD4\xA7\x9C"
		  "\xFC\x1F\xE0\xFF\x42\xF4\xFB\x00",
  }, {
    .desc	= "RFC3686 TV#6 adpated for regular CTR: Encrypting 36 octets using AES-CTR with 192-bit key",
    .alg	= "ctr(aes)",
    .blocklen	= 16,
    .key	= "\x02\xBF\x39\x1E\xE8\xEC\xB1\x59"
		  "\xB9\x59\x61\x7B\x09\x65\x27\x9B"
		  "\xF5\x9B\x60\xA7\x86\xD3\xE0\xFE",
    .klen	= 24,
    .iv		= "\x00\x07\xBD\xFD\x5C\xBD\x60\x27"
		  "\x8D\xCC\x09\x12\x00\x00\x00\x01",
    .ivlen	= 16,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
		  "\x20\x21\x22\x23",
    .len	= 36,
    .ctext	= "\x96\x89\x3F\xC5\x5E\x5C\x72\x2F"
		  "\x54\x0B\x7D\xD1\xDD\xF7\xE7\x58"
		  "\xD2\x88\xBC\x95\xC6\x91\x65\x88"
		  "\x45\x36\xC8\x11\x66\x2F\x21\x88"
		  "\xAB\xEE\x09\x35",
  }, {
    .desc	= "RFC3686 TV#7 adpated for regular CTR: Encrypting 16 octets using AES-CTR with 256-bit key",
    .alg	= "ctr(aes)",
    .blocklen	= 16,
    .key	= "\x77\x6B\xEF\xF2\x85\x1D\xB0\x6F"
		  "\x4C\x8A\x05\x42\xC8\x69\x6F\x6C"
		  "\x6A\x81\xAF\x1E\xEC\x96\xB4\xD3"
		  "\x7F\xC1\xD6\x89\xE6\xC1\xC1\x04",
    .klen	= 32,
    .iv		= "\x00\x00\x00\x60\xDB\x56\x72\xC9"
		  "\x7A\xA8\xF0\xB2\x00\x00\x00\x01",
    .ivlen	= 16,
    .ptext	= "Single block msg",
    .len	= 16,
    .ctext	= "\x14\x5A\xD0\x1D\xBF\x82\x4E\xC7"
		  "\x56\x08\x63\xDC\x71\xE3\xE0\xC0",
  }, {
    .desc	= "RFC3686 TV#8 adpated for regular CTR: Encrypting 32 octets using AES-CTR with 256-bit key",
    .alg	= "ctr(aes)",
    .blocklen	= 16,
    .key	= "\xF6\xD6\x6D\x6B\xD5\x2D\x59\xBB"
		  "\x07\x96\x36\x58\x79\xEF\xF8\x86"
		  "\xC6\x6D\xD5\x1A\x5B\x6A\x99\x74"
		  "\x4B\x50\x59\x0C\x87\xA2\x38\x84",
    .klen	= 32,
    .iv		= "\x00\xFA\xAC\x24\xC1\x58\x5E\xF1"
		  "\x5A\x43\xD8\x75\x00\x00\x00\x01",
    .ivlen	= 16,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F",
    .len	= 32,
    .ctext	= "\xF0\x5E\x23\x1B\x38\x94\x61\x2C"
		  "\x49\xEE\x00\x0B\x80\x4E\xB2\xA9"
		  "\xB8\x30\x6B\x50\x8F\x83\x9D\x6A"
		  "\x55\x30\x83\x1D\x93\x44\xAF\x1C",
  }, {
    .desc	= "RFC3686 TV#9 adpated for regular CTR: Encrypting 36 octets using AES-CTR with 256-bit key",
    .alg	= "ctr(aes)",
    .blocklen	= 16,
    .key	= "\xFF\x7A\x61\x7C\xE6\x91\x48\xE4"
		  "\xF1\x72\x6E\x2F\x43\x58\x1D\xE2"
		  "\xAA\x62\xD9\xF8\x05\x53\x2E\xDF"
		  "\xF1\xEE\xD6\x87\xFB\x54\x15\x3D",
    .klen	= 32,
    .iv		= "\x00\x1C\xC5\xB7\x51\xA5\x1D\x70"
		  "\xA1\xC1\x11\x48\x00\x00\x00\x01",
    .ivlen	= 16,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
		  "\x20\x21\x22\x23",
    .len	= 36,
    .ctext	= "\xEB\x6C\x52\x82\x1D\x0B\xBB\xF7"
		  "\xCE\x75\x94\x46\x2A\xCA\x4F\xAA"
		  "\xB4\x07\xDF\x86\x65\x69\xFD\x07"
		  "\xF4\x8C\xC0\xB5\x83\xD6\x07\x1F"
		  "\x1E\xC0\xE6\xB8",
  }, { /* These are RFC3686 test vectors using RFC3686(AES-CTR) */
    .desc	= "RFC3686 Test Vector #1: Encrypting 16 octets using AES-CTR with 128-bit key",
    .alg	= "rfc3686(ctr(aes))",
    .blocklen	= 16,
    .key	= "\xAE\x68\x52\xF8\x12\x10\x67\xCC"
		  "\x4B\xF7\xA5\x76\x55\x77\xF3\x9E"
		  "\x00\x00\x00\x30",
    .klen	= 20,
    .iv		= "\x00\x00\x00\x00\x00\x00\x00\x00",
    .ivlen	= 8,
    .ptext	= "Single block msg",
    .len	= 16,
    .ctext	= "\xE4\x09\x5D\x4F\xB7\xA7\xB3\x79"
		  "\x2D\x61\x75\xA3\x26\x13\x11\xB8",
  }, {
    .desc	= "RFC3686 Test Vector #2: Encrypting 32 octets using AES-CTR with 128-bit key",
    .alg	= "rfc3686(ctr(aes))",
    .blocklen	= 16,
    .key	= "\x7E\x24\x06\x78\x17\xFA\xE0\xD7"
		  "\x43\xD6\xCE\x1F\x32\x53\x91\x63"
		  "\x00\x6C\xB6\xDB",
    .klen	= 20,
    .iv		= "\xC0\x54\x3B\x59\xDA\x48\xD9\x0B",
    .ivlen	= 8,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F",
    .len	= 32,
    .ctext	= "\x51\x04\xA1\x06\x16\x8A\x72\xD9"
		  "\x79\x0D\x41\xEE\x8E\xDA\xD3\x88"
		  "\xEB\x2E\x1E\xFC\x46\xDA\x57\xC8"
		  "\xFC\xE6\x30\xDF\x91\x41\xBE\x28",
  }, {
    .desc	= "RFC3686 Test Vector #3: Encrypting 36 octets using AES-CTR with 128-bit key",
    .alg	= "rfc3686(ctr(aes))",
    .blocklen	= 16,
    .key	= "\x76\x91\xBE\x03\x5E\x50\x20\xA8"
		  "\xAC\x6E\x61\x85\x29\xF9\xA0\xDC"
		  "\x00\xE0\x01\x7B",
    .klen	= 20,
    .iv		= "\x27\x77\x7F\x3F\x4A\x17\x86\xF0",
    .ivlen	= 8,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
		  "\x20\x21\x22\x23",
    .len	= 36,
    .ctext	= "\xC1\xCF\x48\xA8\x9F\x2F\xFD\xD9"
		  "\xCF\x46\x52\xE9\xEF\xDB\x72\xD7"
		  "\x45\x40\xA4\x2B\xDE\x6D\x78\x36"
		  "\xD5\x9A\x5C\xEA\xAE\xF3\x10\x53"
		  "\x25\xB2\x07\x2F",
  }, {
    .desc	= "RFC3686 Test Vector #4: Encrypting 16 octets using AES-CTR with 192-bit key",
    .alg	= "rfc3686(ctr(aes))",
    .blocklen	= 16,
    .key	= "\x16\xAF\x5B\x14\x5F\xC9\xF5\x79"
		  "\xC1\x75\xF9\x3E\x3B\xFB\x0E\xED"
		  "\x86\x3D\x06\xCC\xFD\xB7\x85\x15"
		  "\x00\x00\x00\x48",
    .klen	= 28,
    .iv		= "\x36\x73\x3C\x14\x7D\x6D\x93\xCB",
    .ivlen	= 8,
    .ptext	= "Single block msg",
    .len	= 16,
    .ctext	= "\x4B\x55\x38\x4F\xE2\x59\xC9\xC8"
		  "\x4E\x79\x35\xA0\x03\xCB\xE9\x28",
  }, {
    .desc	= "RFC3686 Test Vector #5: Encrypting 32 octets using AES-CTR with 192-bit key",
    .alg	= "rfc3686(ctr(aes))",
    .blocklen	= 16,
    .key	= "\x7C\x5C\xB2\x40\x1B\x3D\xC3\x3C"
		  "\x19\xE7\x34\x08\x19\xE0\xF6\x9C"
		  "\x67\x8C\x3D\xB8\xE6\xF6\xA9\x1A"
		  "\x00\x96\xB0\x3B",
    .klen	= 28,
    .iv		= "\x02\x0C\x6E\xAD\xC2\xCB\x50\x0D",
    .ivlen	= 8,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F",
    .len	= 32,
    .ctext	= "\x45\x32\x43\xFC\x60\x9B\x23\x32"
		  "\x7E\xDF\xAA\xFA\x71\x31\xCD\x9F"
		  "\x84\x90\x70\x1C\x5A\xD4\xA7\x9C"
		  "\xFC\x1F\xE0\xFF\x42\xF4\xFB\x00",
  }, {
    .desc	= "RFC3686 Test Vector #6: Encrypting 36 octets using AES-CTR with 192-bit key",
    .alg	= "rfc3686(ctr(aes))",
    .blocklen	= 16,
    .key	= "\x02\xBF\x39\x1E\xE8\xEC\xB1\x59"
		  "\xB9\x59\x61\x7B\x09\x65\x27\x9B"
		  "\xF5\x9B\x60\xA7\x86\xD3\xE0\xFE"
		  "\x00\x07\xBD\xFD",
    .klen	= 28,
    .iv		= "\x5C\xBD\x60\x27\x8D\xCC\x09\x12",
    .ivlen	= 8,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
		  "\x20\x21\x22\x23",
    .len	= 36,
    .ctext	= "\x96\x89\x3F\xC5\x5E\x5C\x72\x2F"
		  "\x54\x0B\x7D\xD1\xDD\xF7\xE7\x58"
		  "\xD2\x88\xBC\x95\xC6\x91\x65\x88"
		  "\x45\x36\xC8\x11\x66\x2F\x21\x88"
		  "\xAB\xEE\x09\x35",
  }, {
    .desc	= "RFC3686 Test Vector #7: Encrypting 16 octets using AES-CTR with 256-bit key",
    .alg	= "rfc3686(ctr(aes))",
    .blocklen	= 16,
    .key	= "\x77\x6B\xEF\xF2\x85\x1D\xB0\x6F"
		  "\x4C\x8A\x05\x42\xC8\x69\x6F\x6C"
		  "\x6A\x81\xAF\x1E\xEC\x96\xB4\xD3"
		  "\x7F\xC1\xD6\x89\xE6\xC1\xC1\x04"
		  "\x00\x00\x00\x60",
    .klen	= 36,
    .iv		= "\xDB\x56\x72\xC9\x7A\xA8\xF0\xB2",
    .ivlen	= 8,
    .ptext	= "Single block msg",
    .len	= 16,
    .ctext	= "\x14\x5A\xD0\x1D\xBF\x82\x4E\xC7"
		  "\x56\x08\x63\xDC\x71\xE3\xE0\xC0",
  }, {
    .desc	= "RFC3686 Test Vector #8: Encrypting 32 octets using AES-CTR with 256-bit key",
    .alg	= "rfc3686(ctr(aes))",
    .blocklen	= 16,
    .key	= "\xF6\xD6\x6D\x6B\xD5\x2D\x59\xBB"
		  "\x07\x96\x36\x58\x79\xEF\xF8\x86"
		  "\xC6\x6D\xD5\x1A\x5B\x6A\x99\x74"
		  "\x4B\x50\x59\x0C\x87\xA2\x38\x84"
		  "\x00\xFA\xAC\x24",
    .klen	= 36,
    .iv		= "\xC1\x58\x5E\xF1\x5A\x43\xD8\x75",
    .ivlen	= 8,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F",
    .len	= 32,
    .ctext	= "\xF0\x5E\x23\x1B\x38\x94\x61\x2C"
		  "\x49\xEE\x00\x0B\x80\x4E\xB2\xA9"
		  "\xB8\x30\x6B\x50\x8F\x83\x9D\x6A"
		  "\x55\x30\x83\x1D\x93\x44\xAF\x1C",
  }, {
    .desc	= "RFC3686 Test Vector #9: Encrypting 36 octets using AES-CTR with 256-bit key",
    .alg	= "rfc3686(ctr(aes))",
    .blocklen	= 16,
    .key	= "\xFF\x7A\x61\x7C\xE6\x91\x48\xE4"
		  "\xF1\x72\x6E\x2F\x43\x58\x1D\xE2"
		  "\xAA\x62\xD9\xF8\x05\x53\x2E\xDF"
		  "\xF1\xEE\xD6\x87\xFB\x54\x15\x3D"
		  "\x00\x1C\xC5\xB7",
    .klen	= 36,
    .iv		= "\x51\xA5\x1D\x70\xA1\xC1\x11\x48",
    .ivlen	= 8,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
		  "\x20\x21\x22\x23",
    .len	= 36,
    .ctext	= "\xEB\x6C\x52\x82\x1D\x0B\xBB\xF7"
		  "\xCE\x75\x94\x46\x2A\xCA\x4F\xAA"
		  "\xB4\x07\xDF\x86\x65\x69\xFD\x07"
		  "\xF4\x8C\xC0\xB5\x83\xD6\x07\x1F"
		  "\x1E\xC0\xE6\xB8",
  }, {
    .desc	= "DES EDE3 CBC test from destest",
    .alg	= "cbc(des3_ede)",
    .blocklen	= 8,
    .key	= "\x01\x23\x45\x67\x89\xab\xcd\xef"
		  "\xf1\xe0\xd3\xc2\xb5\xa4\x97\x86"
		  "\xfe\xdc\xba\x98\x76\x54\x32\x10",
    .klen	= 24,
    .iv		= "\xfe\xdc\xba\x98\x76\x54\x32\x10",
    .ivlen	= 8,
    .ptext	= "\x37\x36\x35\x34\x33\x32\x31\x20"
		  "\x4E\x6F\x77\x20\x69\x73\x20\x74"
		  "\x68\x65\x20\x74\x69\x6D\x65\x20"
		  "\x66\x6F\x72\x20\x00\x00\x00\x00",
    .len	= 32,
    .ctext	= "\x3F\xE3\x01\xC9\x62\xAC\x01\xD0"
		  "\x22\x13\x76\x3C\x1C\xBD\x4C\xDC"
		  "\x79\x96\x57\xC0\x64\xEC\xF5\xD4"
		  "\x1C\x67\x38\x12\xCF\xDE\x96\x75",
  }, {
    .desc	= "linux kernel DES3-CBC TV#1, Generated from openssl",
    .alg	= "cbc(des3_ede)",
    .blocklen	= 8,
    .key	= "\xE9\xC0\xFF\x2E\x76\x0B\x64\x24"
		  "\x44\x4D\x99\x5A\x12\xD6\x40\xC0"
		  "\xEA\xC2\x84\xE8\x14\x95\xDB\xE8",
    .klen	= 24,
    .iv		= "\x7D\x33\x88\x93\x0F\x93\xB2\x42",
    .ivlen	= 8,
    .ptext	= "\x6f\x54\x20\x6f\x61\x4d\x79\x6e"
		  "\x53\x20\x63\x65\x65\x72\x73\x74"
		  "\x54\x20\x6f\x6f\x4d\x20\x6e\x61"
		  "\x20\x79\x65\x53\x72\x63\x74\x65"
		  "\x20\x73\x6f\x54\x20\x6f\x61\x4d"
		  "\x79\x6e\x53\x20\x63\x65\x65\x72"
		  "\x73\x74\x54\x20\x6f\x6f\x4d\x20"
		  "\x6e\x61\x20\x79\x65\x53\x72\x63"
		  "\x74\x65\x20\x73\x6f\x54\x20\x6f"
		  "\x61\x4d\x79\x6e\x53\x20\x63\x65"
		  "\x65\x72\x73\x74\x54\x20\x6f\x6f"
		  "\x4d\x20\x6e\x61\x20\x79\x65\x53"
		  "\x72\x63\x74\x65\x20\x73\x6f\x54"
		  "\x20\x6f\x61\x4d\x79\x6e\x53\x20"
		  "\x63\x65\x65\x72\x73\x74\x54\x20"
		  "\x6f\x6f\x4d\x20\x6e\x61\x0a\x79",
    .len	= 128,
    .ctext	= "\x0e\x2d\xb6\x97\x3c\x56\x33\xf4"
		  "\x67\x17\x21\xc7\x6e\x8a\xd5\x49"
		  "\x74\xb3\x49\x05\xc5\x1c\xd0\xed"
		  "\x12\x56\x5c\x53\x96\xb6\x00\x7d"
		  "\x90\x48\xfc\xf5\x8d\x29\x39\xcc"
		  "\x8a\xd5\x35\x18\x36\x23\x4e\xd7"
		  "\x76\xd1\xda\x0c\x94\x67\xbb\x04"
		  "\x8b\xf2\x03\x6c\xa8\xcf\xb6\xea"
		  "\x22\x64\x47\xaa\x8f\x75\x13\xbf"
		  "\x9f\xc2\xc3\xf0\xc9\x56\xc5\x7a"
		  "\x71\x63\x2e\x89\x7b\x1e\x12\xca"
		  "\xe2\x5f\xaf\xd8\xa4\xf8\xc9\x7a"
		  "\xd6\xf9\x21\x31\x62\x44\x45\xa6"
		  "\xd6\xbc\x5a\xd3\x2d\x54\x43\xcc"
		  "\x9d\xde\xa5\x70\xe9\x42\x45\x8a"
		  "\x6b\xfa\xb1\x91\x13\xb0\xd9\x19",
  }, {
    .desc	= "linux kernel DES3-CBC TV#2, Generated with Crypto++",
    .alg	= "cbc(des3_ede)",
    .blocklen	= 8,
    .key	= "\x9C\xD6\xF3\x9C\xB9\x5A\x67\x00"
		  "\x5A\x67\x00\x2D\xCE\xEB\x2D\xCE"
		  "\xEB\xB4\x51\x72\xB4\x51\x72\x1F",
    .klen	= 24,
    .iv		= "\xB2\xD7\x48\xED\x06\x44\xF9\x12"
		  "\xB7\x28\x4D\x83\x24\x59\xF2\x17",  /* This is odd */
    .ivlen	= 8,
    .ptext	= "\x05\xEC\x77\xFB\x42\xD5\x59\x20"
		  "\x8B\x12\x86\x69\xF0\x5B\xCF\x56"
		  "\x39\xAD\x34\x9F\x66\xEA\x7D\xC4"
		  "\x48\xD3\xBA\x0D\xB1\x18\xE3\x4A"
		  "\xFE\x41\x28\x5C\x27\x8E\x11\x85"
		  "\x6C\xF7\x5E\xC2\x55\x3C\xA0\x0B"
		  "\x92\x65\xE9\x70\xDB\x4F\xD6\xB9"
		  "\x00\xB4\x1F\xE6\x49\xFD\x44\x2F"
		  "\x53\x3A\x8D\x14\x98\x63\xCA\x5D"
		  "\xC1\xA8\x33\xA7\x0E\x91\x78\xEC"
		  "\x77\xDE\x42\xD5\xBC\x07\x8B\x12"
		  "\xE5\x4C\xF0\x5B\x22\x56\x39\x80"
		  "\x6B\x9F\x66\xC9\x50\xC4\xAF\x36"
		  "\xBA\x0D\x94\x7F\xE3\x4A\xDD\x41"
		  "\x28\xB3\x1A\x8E\x11\xF8\x43\xF7"
		  "\x5E\x21\x55\x3C\x87\x6E\x92\x65"
		  "\xCC\x57\xDB\xA2\x35\xB9\x00\xEB"
		  "\x72\xE6\x49\xD0\x44\x2F\xB6\x19"
		  "\x8D\x14\xFF\x46\xCA\x5D\x24\xA8"
		  "\x33\x9A\x6D\x91\x78\xC3\x77\xDE"
		  "\xA1\x08\xBC\x07\xEE\x71\xE5\x4C"
		  "\xD7\x5B\x22\xB5\x1C\x80\x6B\xF2"
		  "\x45\xC9\x50\x3B\xAF\x36\x99\x60"
		  "\x94\x7F\xC6\x4A\xDD\xA4\x0F\xB3"
		  "\x1A\xED\x74\xF8\x43\x2A\x5E\x21"
		  "\x88\x13\x87\x6E\xF1\x58\xCC\x57"
		  "\x3E\xA2\x35\x9C\x67\xEB\x72\xC5"
		  "\x49\xD0\xBB\x02\xB6\x19\xE0\x4B"
		  "\xFF\x46\x29\x5D\x24\x8F\x16\x9A"
		  "\x6D\xF4\x5F\xC3\xAA\x3D\xA1\x08"
		  "\x93\x7A\xEE\x71\xD8\x4C\xD7\xBE"
		  "\x01\xB5\x1C\xE7\x4E\xF2\x45\x2C"
		  "\x50\x3B\x82\x15\x99\x60\xCB\x52"
		  "\xC6\xA9\x30\xA4\x0F\x96\x79\xED"
		  "\x74\xDF\x43\x2A\xBD\x04\x88\x13"
		  "\xFA\x4D\xF1\x58\x23\x57\x3E\x81"
		  "\x68\x9C\x67\xCE\x51\xC5\xAC\x37"
		  "\xBB\x02\x95\x7C\xE0\x4B\xD2\x46"
		  "\x29\xB0\x1B\x8F\x16\xF9\x40\xF4"
		  "\x5F\x26\xAA\x3D\x84\x6F\x93\x7A"
		  "\xCD\x54\xD8\xA3\x0A\xBE\x01\xE8"
		  "\x73\xE7\x4E\xD1\x45\x2C\xB7\x1E"
		  "\x82\x15\xFC\x47\xCB\x52\x25\xA9"
		  "\x30\x9B\x62\x96\x79\xC0\x74\xDF"
		  "\xA6\x09\xBD\x04\xEF\x76\xFA\x4D"
		  "\xD4\x58\x23\x8A\x1D\x81\x68\xF3"
		  "\x5A\xCE\x51\x38\xAC\x37\x9E\x61"
		  "\x95\x7C\xC7\x4B\xD2\xA5\x0C\xB0"
		  "\x1B\xE2\x75\xF9\x40\x2B\x5F\x26"
		  "\x89\x10\x84\x6F\xF6\x59\xCD\x54"
		  "\x3F\xA3\x0A\x9D\x64\xE8\x73\xDA"
		  "\x4E\xD1\xB8\x03\xB7\x1E\xE1\x48"
		  "\xFC\x47\x2E\x52\x25\x8C\x17\x9B"
		  "\x62\xF5\x5C\xC0\xAB\x32\xA6\x09"
		  "\x90\x7B\xEF\x76\xD9\x4D\xD4\xBF"
		  "\x06\x8A\x1D\xE4\x4F\xF3\x5A\x2D"
		  "\x51\x38\x83\x6A\x9E\x61\xC8\x53"
		  "\xC7\xAE\x31\xA5\x0C\x97\x7E\xE2"
		  "\x75\xDC\x40\x2B\xB2\x05\x89\x10"
		  "\xFB\x42\xF6\x59\x20\x54\x3F\x86"
		  "\x69\x9D\x64\xCF\x56\xDA\xAD\x34"
		  "\xB8\x03\xEA\x7D\xE1\x48\xD3\x47",
    .len	= 496,
    .ctext	= "\xF8\xF6\xB5\x60\x5C\x5A\x75\x84"
		  "\x87\x81\x53\xBA\xC9\x6F\xEC\xD5"
		  "\x1E\x68\x8E\x85\x12\x86\x1D\x38"
		  "\x1C\x91\x40\xCC\x69\x6A\xD5\x35"
		  "\x0D\x7C\xB5\x07\x7C\x7B\x2A\xAF"
		  "\x32\xBC\xA1\xB3\x84\x31\x1B\x3C"
		  "\x0A\x2B\xFA\xD3\x9F\xB0\x8C\x37"
		  "\x8F\x9D\xA7\x6D\x6C\xFA\xD7\x90"
		  "\xE3\x69\x54\xED\x3A\xC4\xF1\x6B"
		  "\xB1\xCC\xFB\x7D\xD8\x8E\x17\x0B"
		  "\x9C\xF6\x4C\xD6\xFF\x03\x4E\xD9"
		  "\xE6\xA5\xAD\x25\xE6\x17\x69\x63"
		  "\x11\x35\x61\x94\x88\x7B\x1C\x48"
		  "\xF1\x24\x20\x29\x6B\x93\x1A\x8E"
		  "\x43\x03\x89\xD8\xB1\xDA\x47\x7B"
		  "\x79\x3A\x83\x76\xDA\xAE\xC6\xBB"
		  "\x22\xF8\xE8\x3D\x9A\x65\x54\xD8"
		  "\x4C\xE9\xE7\xE4\x63\x2F\x5C\x73"
		  "\x5A\xC3\xAE\x46\xA8\xCD\x57\xE6"
		  "\x67\x88\xA5\x20\x6F\x5F\x97\xC7"
		  "\xCC\x15\xA2\x0A\x93\xEA\x33\xE7"
		  "\x03\x5F\xEC\x64\x30\x6F\xEE\xD7"
		  "\x7E\xDF\xD6\xE9\x6F\x3F\xD6\x1E"
		  "\xBE\x67\x6C\x5B\x97\xA0\x09\xE6"
		  "\xEE\xFE\x55\xA3\x29\x65\xE0\x12"
		  "\xA1\x6A\x8A\x6F\xF2\xE6\xF1\x96"
		  "\x87\xFB\x9C\x05\xDD\x80\xEC\xFF"
		  "\xC5\xED\x50\xFE\xFC\x91\xCD\xCE"
		  "\x25\x2C\x5F\xD9\xAD\x95\x7D\x99"
		  "\xF0\x05\xC4\x71\x46\x5F\xF9\x0D"
		  "\xD2\x63\xDF\x9B\x96\x2E\x2B\xA6"
		  "\x2B\x1C\xD5\xFB\x96\x24\x60\x60"
		  "\x54\x40\xB8\x62\xA4\xF8\x46\x95"
		  "\x73\x28\xA3\xA6\x16\x2B\x17\xE7"
		  "\x7A\xF8\x62\x54\x3B\x64\x69\xE1"
		  "\x71\x34\x29\x5B\x4E\x05\x9B\xFA"
		  "\x5E\xF1\x96\xB7\xCE\x16\x9B\x59"
		  "\xF1\x1A\x4C\x51\x26\xFD\x79\xE2"
		  "\x3B\x8E\x71\x69\x6A\x91\xB6\x65"
		  "\x32\x09\xB8\xE4\x09\x1F\xEA\x39"
		  "\xCE\x20\x65\x9F\xD6\xD1\xC7\xF0"
		  "\x73\x50\x08\x56\x20\x9B\x94\x23"
		  "\x14\x39\xB7\x2B\xB1\x2D\x6D\x6F"
		  "\x41\x5B\xCC\xE2\x18\xAE\x62\x89"
		  "\x78\x8E\x67\x23\xD0\xFB\x2B\xE5"
		  "\x25\xC9\x48\x97\xB5\xD3\x17\xD5"
		  "\x6A\x9F\xA7\x48\x0C\x2B\x73\x3B"
		  "\x57\x08\xAE\x91\xF2\xB7\x57\x89"
		  "\xF4\xD0\xB0\x07\xB0\x42\x6C\xAF"
		  "\x98\x1A\xE7\xD1\xAC\x1E\xB5\x02"
		  "\xD4\x56\x42\x79\x79\x7F\x2A\x77"
		  "\x25\xE9\x7D\xC1\x88\x19\x2B\x49"
		  "\x6F\x46\x59\xAB\x56\x1F\x61\xE0"
		  "\x0C\x24\x9C\xC9\x5B\x63\xA9\x12"
		  "\xCF\x88\x96\xB6\xA8\x24\xC6\xA8"
		  "\x21\x85\x1A\x62\x7E\x34\xBB\xEB"
		  "\xBD\x02\x2A\xC7\xD8\x89\x80\xC5"
		  "\xB1\xBB\x60\xA5\x22\xFC\x6F\x38"
		  "\x02\x80\xA3\x28\x22\x75\xE1\xE9"
		  "\x90\xE9\xFA\x4B\x00\x10\xAC\x58"
		  "\x83\x70\xFF\x86\xE6\xAA\x0F\x1F"
		  "\x95\x63\x73\xA2\x44\xAC\xF8\xA5",
  }, {
    .desc	= "DES-CBC from NIST 800-20, Table A.2, Round 0",
    .alg	= "cbc(des)",
    .blocklen	= 8,
    .key	= "\x80\x01\x01\x01\x01\x01\x01\x01",
    .klen	= 8,
    .iv		= "\x00\x00\x00\x00\x00\x00\x00\x00",
    .ivlen	= 8,
    .ptext	= "\x00\x00\x00\x00\x00\x00\x00\x00",
    .len	= 8,
    .ctext	= "\x95\xA8\xD7\x28\x13\xDA\xA9\x4D",
  }, {
    .desc	= "linux kernel DES-CBC TV#1, From OpenSSL",
    .alg	= "cbc(des)",
    .blocklen	= 8,
    .key	= "\x01\x23\x45\x67\x89\xab\xcd\xef",
    .klen	= 8,
    .iv		= "\xfe\xdc\xba\x98\x76\x54\x32\x10",
    .ivlen	= 8,
    .ptext	= "\x37\x36\x35\x34\x33\x32\x31\x20"
		  "\x4e\x6f\x77\x20\x69\x73\x20\x74"
		  "\x68\x65\x20\x74\x69\x6d\x65\x20",
    .len	= 24,
    .ctext	= "\xcc\xd1\x73\xff\xab\x20\x39\xf4"
		  "\xac\xd8\xae\xfd\xdf\xd8\xa1\xeb"
		  "\x46\x8e\x91\x15\x78\x88\xba\x68",
  }, {
    .desc	= "linux kernel DES-CBC TV#2, FIPS Pub 81",
    .alg	= "cbc(des)",
    .blocklen	= 8,
    .key	= "\x01\x23\x45\x67\x89\xab\xcd\xef",
    .klen	= 8,
    .iv		= "\x12\x34\x56\x78\x90\xab\xcd\xef",
    .ivlen	= 8,
    .ptext	= "\x4e\x6f\x77\x20\x69\x73\x20\x74",
    .len	= 8,
    .ctext	= "\xe5\xc7\xcd\xde\x87\x2b\xf2\x7c",
  }, {
    .desc	= "linux kernel DES-CBC TV#3, FIPS Pub 81",
    .alg	= "cbc(des)",
    .blocklen	= 8,
    .key	= "\x01\x23\x45\x67\x89\xab\xcd\xef",
    .klen	= 8,
    .iv		= "\xe5\xc7\xcd\xde\x87\x2b\xf2\x7c",
    .ivlen	= 8,
    .ptext	= "\x68\x65\x20\x74\x69\x6d\x65\x20",
    .len	= 8,
    .ctext	= "\x43\xe9\x34\x00\x8c\x38\x9c\x0f",
  }, {
    .desc	= "linux kernel DES-CBC TV#4, FIPS Pub 81",
    .alg	= "cbc(des)",
    .blocklen	= 8,
    .key	= "\x01\x23\x45\x67\x89\xab\xcd\xef",
    .klen	= 8,
    .iv		= "\x43\xe9\x34\x00\x8c\x38\x9c\x0f",
    .ivlen	= 8,
    .ptext	= "\x66\x6f\x72\x20\x61\x6c\x6c\x20",
    .len	= 8,
    .ctext	= "\x68\x37\x88\x49\x9a\x7c\x05\xf6",
  }, {
    .desc	= "linux kernel DES-CBC TV#, Generated with Crypto++",
    .alg	= "cbc(des)",
    .blocklen	= 8,
    .key	= "\xC9\x83\xA6\xC9\xEC\x0F\x32\x55",
    .klen	= 8,
    .iv		= "\xE7\x82\x1D\xB8\x53\x11\xAC\x47",
    .ivlen	= 8,
    .ptext	= "\x50\xB9\x22\xAE\x17\x80\x0C\x75"
		  "\xDE\x47\xD3\x3C\xA5\x0E\x9A\x03"
		  "\x6C\xF8\x61\xCA\x33\xBF\x28\x91"
		  "\x1D\x86\xEF\x58\xE4\x4D\xB6\x1F"
		  "\xAB\x14\x7D\x09\x72\xDB\x44\xD0"
		  "\x39\xA2\x0B\x97\x00\x69\xF5\x5E"
		  "\xC7\x30\xBC\x25\x8E\x1A\x83\xEC"
		  "\x55\xE1\x4A\xB3\x1C\xA8\x11\x7A"
		  "\x06\x6F\xD8\x41\xCD\x36\x9F\x08"
		  "\x94\xFD\x66\xF2\x5B\xC4\x2D\xB9"
		  "\x22\x8B\x17\x80\xE9\x52\xDE\x47"
		  "\xB0\x19\xA5\x0E\x77\x03\x6C\xD5"
		  "\x3E\xCA\x33\x9C\x05\x91\xFA\x63"
		  "\xEF\x58\xC1\x2A\xB6\x1F\x88\x14"
		  "\x7D\xE6\x4F\xDB\x44\xAD\x16\xA2"
		  "\x0B\x74\x00\x69\xD2\x3B\xC7\x30"
		  "\x99\x02\x8E\xF7\x60\xEC\x55\xBE"
		  "\x27\xB3\x1C\x85\x11\x7A\xE3\x4C"
		  "\xD8\x41\xAA\x13\x9F\x08\x71\xFD"
		  "\x66\xCF\x38\xC4\x2D\x96\x22\x8B"
		  "\xF4\x5D\xE9\x52\xBB\x24\xB0\x19"
		  "\x82\x0E\x77\xE0\x49\xD5\x3E\xA7"
		  "\x10\x9C\x05\x6E\xFA\x63\xCC\x35"
		  "\xC1\x2A\x93\x1F\x88\xF1\x5A\xE6"
		  "\x4F\xB8\x21\xAD\x16\x7F\x0B\x74"
		  "\xDD\x46\xD2\x3B\xA4\x0D\x99\x02"
		  "\x6B\xF7\x60\xC9\x32\xBE\x27\x90"
		  "\x1C\x85\xEE\x57\xE3\x4C\xB5\x1E"
		  "\xAA\x13\x7C\x08\x71\xDA\x43\xCF"
		  "\x38\xA1\x0A\x96\xFF\x68\xF4\x5D"
		  "\xC6\x2F\xBB\x24\x8D\x19\x82\xEB",
    .len	= 248,
    .ctext	= "\x71\xCC\x56\x1C\x87\x2C\x43\x20"
		  "\x1C\x20\x13\x09\xF9\x2B\x40\x47"
		  "\x99\x10\xD1\x1B\x65\x33\x33\xBA"
		  "\x88\x0D\xA2\xD1\x86\xFF\x4D\xF4"
		  "\x5A\x0C\x12\x96\x32\x57\xAA\x26"
		  "\xA7\xF4\x32\x8D\xBC\x10\x31\x9E"
		  "\x81\x72\x74\xDE\x30\x19\x69\x49"
		  "\x54\x9C\xC3\xEB\x0B\x97\xDD\xD1"
		  "\xE8\x6D\x0D\x05\x83\xA5\x12\x08"
		  "\x47\xF8\x88\x03\x86\x51\x3C\xEF"
		  "\xE7\x11\x73\x4D\x44\x2B\xE2\x16"
		  "\xE8\xA5\x06\x50\x66\x70\x0E\x14"
		  "\xBA\x21\x3B\xD5\x23\x5B\xA7\x8F"
		  "\x56\xB6\xA7\x44\xDB\x86\xAB\x69"
		  "\x33\x3C\xBE\x64\xC4\x22\xD3\xFE"
		  "\x49\x90\x88\x6A\x09\x8F\x76\x59"
		  "\xCB\xB7\xA0\x2D\x79\x75\x92\x8A"
		  "\x82\x1D\xC2\xFE\x09\x1F\x78\x6B"
		  "\x2F\xD6\xA4\x87\x1E\xC4\x53\x63"
		  "\x80\x02\x61\x2F\xE3\x46\xB6\xB5"
		  "\xAA\x95\xF4\xEE\xA7\x64\x2B\x4F"
		  "\x20\xCF\xD2\x47\x4E\x39\x65\xB3"
		  "\x11\x87\xA2\x6C\x49\x7E\x36\xC7"
		  "\x62\x8B\x48\x0D\x6A\x64\x00\xBD"
		  "\x71\x91\x8C\xE9\x70\x19\x01\x4F"
		  "\x4E\x68\x23\xBA\xDA\x24\x2E\x45"
		  "\x02\x14\x33\x21\xAE\x58\x4B\xCF"
		  "\x3B\x4B\xE8\xF8\xF6\x4F\x34\x93"
		  "\xD7\x07\x8A\xD7\x18\x92\x36\x8C"
		  "\x82\xA9\xBD\x6A\x31\x91\x39\x11"
		  "\xC6\x4A\xF3\x55\xC7\x29\x2E\x63",
  },
  {
    .desc	= "AES-GCM encryption test vector from Linux Kernel #1",
    .alg	= "gcm(aes)",
    .blocklen	= 16,
    .key	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .klen	= 16,
    .tag	= "\x58\xe2\xfc\xce\xfa\x7e\x30\x61"
		  "\x36\x7f\x1d\x57\xa4\xe7\x45\x5a",
    .tlen	= 16,
  },
  {
    .desc	= "AES-GCM encryption test vector from Linux Kernel #2",
    .alg	= "gcm(aes)",
    .blocklen	= 16,
    .key	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .klen	= 16,
    .iv		= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00",
    .ivlen	= 12,
    .ptext	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .len	= 16,
    .ctext	= "\x03\x88\xda\xce\x60\xb6\xa3\x92"
		  "\xf3\x28\xc2\xb9\x71\xb2\xfe\x78",
    .tag	= "\xab\x6e\x47\xd4\x2c\xec\x13\xbd"
		  "\xf5\x3a\x67\xb2\x12\x57\xbd\xdf",
    .tlen	= 16,
  },
  {
    .desc	= "AES-GCM encryption test vector from Linux Kernel #3",
    .alg	= "gcm(aes)",
    .blocklen	= 16,
    .key	= "\xfe\xff\xe9\x92\x86\x65\x73\x1c"
		  "\x6d\x6a\x8f\x94\x67\x30\x83\x08",
    .klen	= 16,
    .iv		= "\xca\xfe\xba\xbe\xfa\xce\xdb\xad"
		  "\xde\xca\xf8\x88",
    .ivlen	= 12,
    .ptext	= "\xd9\x31\x32\x25\xf8\x84\x06\xe5"
		  "\xa5\x59\x09\xc5\xaf\xf5\x26\x9a"
		  "\x86\xa7\xa9\x53\x15\x34\xf7\xda"
		  "\x2e\x4c\x30\x3d\x8a\x31\x8a\x72"
		  "\x1c\x3c\x0c\x95\x95\x68\x09\x53"
		  "\x2f\xcf\x0e\x24\x49\xa6\xb5\x25"
		  "\xb1\x6a\xed\xf5\xaa\x0d\xe6\x57"
		  "\xba\x63\x7b\x39\x1a\xaf\xd2\x55",
    .len	= 64,
    .ctext	= "\x42\x83\x1e\xc2\x21\x77\x74\x24"
		  "\x4b\x72\x21\xb7\x84\xd0\xd4\x9c"
		  "\xe3\xaa\x21\x2f\x2c\x02\xa4\xe0"
		  "\x35\xc1\x7e\x23\x29\xac\xa1\x2e"
		  "\x21\xd5\x14\xb2\x54\x66\x93\x1c"
		  "\x7d\x8f\x6a\x5a\xac\x84\xaa\x05"
		  "\x1b\xa3\x0b\x39\x6a\x0a\xac\x97"
		  "\x3d\x58\xe0\x91\x47\x3f\x59\x85",
    .tag	= "\x4d\x5c\x2a\xf3\x27\xcd\x64\xa6"
		  "\x2c\xf3\x5a\xbd\x2b\xa6\xfa\xb4",
    .tlen	= 16,
  },
  {
    .desc	= "AES-GCM encryption test vector from Linux Kernel #4",
    .alg	= "gcm(aes)",
    .blocklen	= 16,
    .key	= "\xfe\xff\xe9\x92\x86\x65\x73\x1c"
		  "\x6d\x6a\x8f\x94\x67\x30\x83\x08",
    .klen	= 16,
    .iv		= "\xca\xfe\xba\xbe\xfa\xce\xdb\xad"
		  "\xde\xca\xf8\x88",
    .ivlen	= 12,
    .aad	= "\xfe\xed\xfa\xce\xde\xad\xbe\xef"
		  "\xfe\xed\xfa\xce\xde\xad\xbe\xef"
		  "\xab\xad\xda\xd2",
    .aadlen	= 20,
    .ptext	= "\xd9\x31\x32\x25\xf8\x84\x06\xe5"
		  "\xa5\x59\x09\xc5\xaf\xf5\x26\x9a"
		  "\x86\xa7\xa9\x53\x15\x34\xf7\xda"
		  "\x2e\x4c\x30\x3d\x8a\x31\x8a\x72"
		  "\x1c\x3c\x0c\x95\x95\x68\x09\x53"
		  "\x2f\xcf\x0e\x24\x49\xa6\xb5\x25"
		  "\xb1\x6a\xed\xf5\xaa\x0d\xe6\x57"
		  "\xba\x63\x7b\x39",
    .len	= 60,
    .ctext	= "\x42\x83\x1e\xc2\x21\x77\x74\x24"
		  "\x4b\x72\x21\xb7\x84\xd0\xd4\x9c"
		  "\xe3\xaa\x21\x2f\x2c\x02\xa4\xe0"
		  "\x35\xc1\x7e\x23\x29\xac\xa1\x2e"
		  "\x21\xd5\x14\xb2\x54\x66\x93\x1c"
		  "\x7d\x8f\x6a\x5a\xac\x84\xaa\x05"
		  "\x1b\xa3\x0b\x39\x6a\x0a\xac\x97"
		  "\x3d\x58\xe0\x91",
    .tag	= "\x5b\xc9\x4f\xbc\x32\x21\xa5\xdb"
		  "\x94\xfa\xe9\x5a\xe7\x12\x1a\x47",
    .tlen	= 16,
  },
  {
    .desc	= "AES-GCM encryption test vector from Linux Kernel #5",
    .alg	= "gcm(aes)",
    .blocklen	= 16,
    .key	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .klen	= 24,
    .tag	= "\xcd\x33\xb2\x8a\xc7\x73\xf7\x4b"
		  "\xa0\x0e\xd1\xf3\x12\x57\x24\x35",
    .tlen	= 16,
  },
  {
    .desc	= "AES-GCM encryption test vector from Linux Kernel #6",
    .alg	= "gcm(aes)",
    .blocklen	= 16,
    .key	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .klen	= 24,
    .ptext	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .len	= 16,
    .ctext	= "\x98\xe7\x24\x7c\x07\xf0\xfe\x41"
		  "\x1c\x26\x7e\x43\x84\xb0\xf6\x00",
    .tag	= "\x2f\xf5\x8d\x80\x03\x39\x27\xab"
		  "\x8e\xf4\xd4\x58\x75\x14\xf0\xfb",
    .tlen	= 16,
  },
  {
    .desc	= "AES-GCM encryption test vector from Linux Kernel #7",
    .alg	= "gcm(aes)",
    .blocklen	= 16,
    .key	= "\xfe\xff\xe9\x92\x86\x65\x73\x1c"
		  "\x6d\x6a\x8f\x94\x67\x30\x83\x08"
		  "\xfe\xff\xe9\x92\x86\x65\x73\x1c",
    .klen	= 24,
    .iv		= "\xca\xfe\xba\xbe\xfa\xce\xdb\xad"
		  "\xde\xca\xf8\x88",
    .ivlen	= 12,
    .ptext	= "\xd9\x31\x32\x25\xf8\x84\x06\xe5"
		  "\xa5\x59\x09\xc5\xaf\xf5\x26\x9a"
		  "\x86\xa7\xa9\x53\x15\x34\xf7\xda"
		  "\x2e\x4c\x30\x3d\x8a\x31\x8a\x72"
		  "\x1c\x3c\x0c\x95\x95\x68\x09\x53"
		  "\x2f\xcf\x0e\x24\x49\xa6\xb5\x25"
		  "\xb1\x6a\xed\xf5\xaa\x0d\xe6\x57"
		  "\xba\x63\x7b\x39\x1a\xaf\xd2\x55",
    .len	= 64,
    .ctext	= "\x39\x80\xca\x0b\x3c\x00\xe8\x41"
		  "\xeb\x06\xfa\xc4\x87\x2a\x27\x57"
		  "\x85\x9e\x1c\xea\xa6\xef\xd9\x84"
		  "\x62\x85\x93\xb4\x0c\xa1\xe1\x9c"
		  "\x7d\x77\x3d\x00\xc1\x44\xc5\x25"
		  "\xac\x61\x9d\x18\xc8\x4a\x3f\x47"
		  "\x18\xe2\x44\x8b\x2f\xe3\x24\xd9"
		  "\xcc\xda\x27\x10\xac\xad\xe2\x56",
    .tag	= "\x99\x24\xa7\xc8\x58\x73\x36\xbf"
		  "\xb1\x18\x02\x4d\xb8\x67\x4a\x14",
    .tlen	= 16,
  },
  {
    .desc	= "AES-GCM encryption test vector from Linux Kernel #8",
    .alg	= "gcm(aes)",
    .blocklen	= 16,
    .key	= "\xfe\xff\xe9\x92\x86\x65\x73\x1c"
		  "\x6d\x6a\x8f\x94\x67\x30\x83\x08"
		  "\xfe\xff\xe9\x92\x86\x65\x73\x1c",
    .klen	= 24,
    .iv		= "\xca\xfe\xba\xbe\xfa\xce\xdb\xad"
		  "\xde\xca\xf8\x88",
    .ivlen	= 12,
    .aad	= "\xfe\xed\xfa\xce\xde\xad\xbe\xef"
		  "\xfe\xed\xfa\xce\xde\xad\xbe\xef"
		  "\xab\xad\xda\xd2",
    .aadlen	= 20,
    .ptext	= "\xd9\x31\x32\x25\xf8\x84\x06\xe5"
		  "\xa5\x59\x09\xc5\xaf\xf5\x26\x9a"
		  "\x86\xa7\xa9\x53\x15\x34\xf7\xda"
		  "\x2e\x4c\x30\x3d\x8a\x31\x8a\x72"
		  "\x1c\x3c\x0c\x95\x95\x68\x09\x53"
		  "\x2f\xcf\x0e\x24\x49\xa6\xb5\x25"
		  "\xb1\x6a\xed\xf5\xaa\x0d\xe6\x57"
		  "\xba\x63\x7b\x39",
    .len	= 60,
    .ctext	= "\x39\x80\xca\x0b\x3c\x00\xe8\x41"
		  "\xeb\x06\xfa\xc4\x87\x2a\x27\x57"
		  "\x85\x9e\x1c\xea\xa6\xef\xd9\x84"
		  "\x62\x85\x93\xb4\x0c\xa1\xe1\x9c"
		  "\x7d\x77\x3d\x00\xc1\x44\xc5\x25"
		  "\xac\x61\x9d\x18\xc8\x4a\x3f\x47"
		  "\x18\xe2\x44\x8b\x2f\xe3\x24\xd9"
		  "\xcc\xda\x27\x10",
    .tag	= "\x25\x19\x49\x8e\x80\xf1\x47\x8f"
		  "\x37\xba\x55\xbd\x6d\x27\x61\x8c",
    .tlen	= 16,
  },
  {
    .desc	= "AES-GCM encryption test vector from Linux Kernel #9",
    .alg	= "gcm(aes)",
    .blocklen	= 16,
    .key	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .klen	= 32,
    .tag	= "\x53\x0f\x8a\xfb\xc7\x45\x36\xb9"
		  "\xa9\x63\xb4\xf1\xc4\xcb\x73\x8b",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #1",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00",
    .klen	= 20,
    .iv		= "\x00\x00\x00\x00\x00\x00\x00\x00",
    .ivlen	= 8,
    .aad	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .aadlen	= 16,
    .ptext	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .len	= 16,
    .ctext	= "\x03\x88\xDA\xCE\x60\xB6\xA3\x92"
		  "\xF3\x28\xC2\xB9\x71\xB2\xFE\x78",
    .tag	= "\x97\xFE\x4C\x23\x37\x42\x01\xE0"
		  "\x81\x9F\x8D\xC5\xD7\x41\xA0\x1B",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #2",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\xfe\xff\xe9\x92\x86\x65\x73\x1c"
		  "\x6d\x6a\x8f\x94\x67\x30\x83\x08"
		  "\x00\x00\x00\x00",
    .klen	= 20,
    .iv		= "\x00\x00\x00\x00\x00\x00\x00\x01",
    .ivlen	= 8,
    .aad	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x01",
    .aadlen	= 16,
    .ptext	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .len	= 16,
    .ctext	= "\xC0\x0D\x8B\x42\x0F\x8F\x34\x18"
		  "\x88\xB1\xC5\xBC\xC5\xB6\xD6\x28",
    .tag	= "\x6A\x9D\xDF\x11\x5E\xFE\x5E\x9D"
		  "\x2F\x70\x44\x92\xF7\xF2\xE3\xEF",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #3",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\xfe\xff\xe9\x92\x86\x65\x73\x1c"
		  "\x6d\x6a\x8f\x94\x67\x30\x83\x08"
		  "\x00\x00\x00\x00",
    .klen	= 20,
    .iv		= "\x00\x00\x00\x00\x00\x00\x00\x00",
    .ivlen	= 8,
    .aad	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .aadlen	= 16,
    .ptext	= "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x01\x01\x01\x01\x01\x01\x01\x01",
    .len	= 16,
    .ctext	= "\x4B\xB1\xB5\xE3\x25\x71\x70\xDE"
		  "\x7F\xC9\x9C\xA5\x14\x19\xF2\xAC",
    .tag	= "\x0B\x8F\x88\x69\x17\xE6\xB4\x3C"
		  "\xB1\x68\xFD\x14\x52\x64\x61\xB2",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #4",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\xfe\xff\xe9\x92\x86\x65\x73\x1c"
		  "\x6d\x6a\x8f\x94\x67\x30\x83\x08"
		  "\x00\x00\x00\x00",
    .klen	= 20,
    .iv		= "\x00\x00\x00\x00\x00\x00\x00\x00",
    .ivlen	= 8,
    .aad	= "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .aadlen	= 16,
    .ptext	= "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x01\x01\x01\x01\x01\x01\x01\x01",
    .len	= 16,
    .ctext	= "\x4B\xB1\xB5\xE3\x25\x71\x70\xDE"
		  "\x7F\xC9\x9C\xA5\x14\x19\xF2\xAC",
    .tag	= "\x90\x92\xB7\xE3\x5F\xA3\x9A\x63"
		  "\x7E\xD7\x1F\xD8\xD3\x7C\x4B\xF5",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #5",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\xfe\xff\xe9\x92\x86\x65\x73\x1c"
		  "\x6d\x6a\x8f\x94\x67\x30\x83\x08"
		  "\x00\x00\x00\x00",
    .klen	= 20,
    .iv		= "\x00\x00\x00\x00\x00\x00\x00\x01",
    .ivlen	= 8,
    .aad	= "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x00\x00\x00\x00\x00\x00\x00\x01",
    .aadlen	= 16,
    .ptext	= "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x01\x01\x01\x01\x01\x01\x01\x01",
    .len	= 16,
    .ctext	= "\xC1\x0C\x8A\x43\x0E\x8E\x35\x19"
		  "\x89\xB0\xC4\xBD\xC4\xB7\xD7\x29",
    .tag	= "\x64\x50\xF9\x32\x13\xFB\x74\x61"
		  "\xF4\xED\x52\xD3\xC5\x10\x55\x3C",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #6",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\xfe\xff\xe9\x92\x86\x65\x73\x1c"
		  "\x6d\x6a\x8f\x94\x67\x30\x83\x08"
		  "\x00\x00\x00\x00",
    .klen	= 20,
    .iv		= "\x00\x00\x00\x00\x00\x00\x00\x01",
    .ivlen	= 8,
    .aad	= "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x00\x00\x00\x00\x00\x00\x00\x01",
    .aadlen	= 16,
    .ptext	= "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x01\x01\x01\x01\x01\x01\x01\x01"
		  "\x01\x01\x01\x01\x01\x01\x01\x01",
    .len	= 64,
    .ctext	= "\xC1\x0C\x8A\x43\x0E\x8E\x35\x19"
		  "\x89\xB0\xC4\xBD\xC4\xB7\xD7\x29"
		  "\x98\x14\xA1\x42\x37\x80\xFD\x90"
		  "\x68\x12\x01\xA8\x91\x89\xB9\x83"
		  "\x5B\x11\x77\x12\x9B\xFF\x24\x89"
		  "\x94\x5F\x18\x12\xBA\x27\x09\x39"
		  "\x99\x96\x76\x42\x15\x1C\xCD\xCB"
		  "\xDC\xD3\xDA\x65\x73\xAF\x80\xCD",
    .tag	= "\xD2\xB6\xC2\x4A\x76\xC2\x92\x85"
		  "\xBD\xCF\x62\x98\x58\x14\xE5\xBD",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #7",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
		  "\x00\x00\x00\x00",
    .klen	= 20,
    .iv		= "\x00\x00\x45\x67\x89\xab\xcd\xef",
    .ivlen	= 8,
    .aad	= "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
		  "\xaa\xaa\xaa\xaa\x00\x00\x45\x67"
		  "\x89\xab\xcd\xef",
    .aadlen	= 20,
    .ptext	= "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff"
		  "\xff\xff\xff\xff\xff\xff\xff\xff",
    .len	= 192,
    .ctext	= "\xC1\x76\x33\x85\xE2\x9B\x5F\xDE"
		  "\xDE\x89\x3D\x42\xE7\xC9\x69\x8A"
		  "\x44\x6D\xC3\x88\x46\x2E\xC2\x01"
		  "\x5E\xF6\x0C\x39\xF0\xC4\xA5\x82"
		  "\xCD\xE8\x31\xCC\x0A\x4C\xE4\x44"
		  "\x41\xA9\x82\x6F\x22\xA1\x23\x1A"
		  "\xA8\xE3\x16\xFD\x31\x5C\x27\x31"
		  "\xF1\x7F\x01\x63\xA3\xAF\x70\xA1"
		  "\xCF\x07\x57\x41\x67\xD0\xC4\x42"
		  "\xDB\x18\xC6\x4C\x4C\xE0\x3D\x9F"
		  "\x05\x07\xFB\x13\x7D\x4A\xCA\x5B"
		  "\xF0\xBF\x64\x7E\x05\xB1\x72\xEE"
		  "\x7C\x3B\xD4\xCD\x14\x03\xB2\x2C"
		  "\xD3\xA9\xEE\xFA\x17\xFC\x9C\xDF"
		  "\xC7\x75\x40\xFF\xAE\xAD\x1E\x59"
		  "\x2F\x30\x24\xFB\xAD\x6B\x10\xFA"
		  "\x6C\x9F\x5B\xE7\x25\xD5\xD0\x25"
		  "\xAC\x4A\x4B\xDA\xFC\x7A\x85\x1B"
		  "\x7E\x13\x06\x82\x08\x17\xA4\x35"
		  "\xEC\xC5\x8D\x63\x96\x81\x0A\x8F"
		  "\xA3\x05\x38\x95\x20\x1A\x47\x04"
		  "\x6F\x6D\xDA\x8F\xEF\xC1\x76\x35"
		  "\x6B\xC7\x4D\x0F\x94\x12\xCA\x3E"
		  "\x2E\xD5\x03\x2E\x86\x7E\xAA\x3B",
    .tag	= "\x37\x08\x1C\xCF\xBA\x5D\x71\x46"
		  "\x80\x72\xB0\x4C\x82\x0D\x60\x3C",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #8",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\x4C\x80\xCD\xEF\xBB\x5D\x10\xDA"
		  "\x90\x6A\xC7\x3C\x36\x13\xA6\x34"
		  "\x2E\x44\x3B\x68",
    .klen	= 20,
    .iv		= "\x49\x56\xED\x7E\x3B\x24\x4C\xFE",
    .ivlen	= 8,
    .aad	= "\x00\x00\x43\x21\x87\x65\x43\x21"
		  "\x00\x00\x00\x00\x49\x56\xED\x7E"
		  "\x3B\x24\x4C\xFE",
    .aadlen	= 20,
    .ptext	= "\x45\x00\x00\x48\x69\x9A\x00\x00"
		  "\x80\x11\x4D\xB7\xC0\xA8\x01\x02"
		  "\xC0\xA8\x01\x01\x0A\x9B\xF1\x56"
		  "\x38\xD3\x01\x00\x00\x01\x00\x00"
		  "\x00\x00\x00\x00\x04\x5F\x73\x69"
		  "\x70\x04\x5F\x75\x64\x70\x03\x73"
		  "\x69\x70\x09\x63\x79\x62\x65\x72"
		  "\x63\x69\x74\x79\x02\x64\x6B\x00"
		  "\x00\x21\x00\x01\x01\x02\x02\x01",
    .len	= 72,
    .ctext	= "\xFE\xCF\x53\x7E\x72\x9D\x5B\x07"
		  "\xDC\x30\xDF\x52\x8D\xD2\x2B\x76"
		  "\x8D\x1B\x98\x73\x66\x96\xA6\xFD"
		  "\x34\x85\x09\xFA\x13\xCE\xAC\x34"
		  "\xCF\xA2\x43\x6F\x14\xA3\xF3\xCF"
		  "\x65\x92\x5B\xF1\xF4\xA1\x3C\x5D"
		  "\x15\xB2\x1E\x18\x84\xF5\xFF\x62"
		  "\x47\xAE\xAB\xB7\x86\xB9\x3B\xCE"
		  "\x61\xBC\x17\xD7\x68\xFD\x97\x32",
    .tag	= "\x45\x90\x18\x14\x8F\x6C\xBE\x72"
		  "\x2F\xD0\x47\x96\x56\x2D\xFD\xB4",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #9",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\xFE\xFF\xE9\x92\x86\x65\x73\x1C"
		  "\x6D\x6A\x8F\x94\x67\x30\x83\x08"
		  "\xCA\xFE\xBA\xBE",
    .klen	= 20,
    .iv		= "\xFA\xCE\xDB\xAD\xDE\xCA\xF8\x88",
    .ivlen	= 8,
    .aad	= "\x00\x00\xA5\xF8\x00\x00\x00\x0A"
		  "\xFA\xCE\xDB\xAD\xDE\xCA\xF8\x88",
    .aadlen	= 16,
    .ptext	= "\x45\x00\x00\x3E\x69\x8F\x00\x00"
		  "\x80\x11\x4D\xCC\xC0\xA8\x01\x02"
		  "\xC0\xA8\x01\x01\x0A\x98\x00\x35"
		  "\x00\x2A\x23\x43\xB2\xD0\x01\x00"
		  "\x00\x01\x00\x00\x00\x00\x00\x00"
		  "\x03\x73\x69\x70\x09\x63\x79\x62"
		  "\x65\x72\x63\x69\x74\x79\x02\x64"
		  "\x6B\x00\x00\x01\x00\x01\x00\x01",
    .len	= 64,
    .ctext	= "\xDE\xB2\x2C\xD9\xB0\x7C\x72\xC1"
		  "\x6E\x3A\x65\xBE\xEB\x8D\xF3\x04"
		  "\xA5\xA5\x89\x7D\x33\xAE\x53\x0F"
		  "\x1B\xA7\x6D\x5D\x11\x4D\x2A\x5C"
		  "\x3D\xE8\x18\x27\xC1\x0E\x9A\x4F"
		  "\x51\x33\x0D\x0E\xEC\x41\x66\x42"
		  "\xCF\xBB\x85\xA5\xB4\x7E\x48\xA4"
		  "\xEC\x3B\x9B\xA9\x5D\x91\x8B\xD1",
    .tag	= "\x83\xB7\x0D\x3A\xA8\xBC\x6E\xE4"
		  "\xC3\x09\xE9\xD8\x5A\x41\xAD\x4A",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #10",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\xAB\xBC\xCD\xDE\xF0\x01\x12\x23"
		  "\x34\x45\x56\x67\x78\x89\x9A\xAB"
		  "\xAB\xBC\xCD\xDE\xF0\x01\x12\x23"
		  "\x34\x45\x56\x67\x78\x89\x9A\xAB"
		  "\x11\x22\x33\x44",
    .klen	= 36,
    .iv		= "\x01\x02\x03\x04\x05\x06\x07\x08",
    .ivlen	= 8,
    .aad	= "\x4A\x2C\xBF\xE3\x00\x00\x00\x02"
		  "\x01\x02\x03\x04\x05\x06\x07\x08",
    .aadlen	= 16,
    .ptext	= "\x45\x00\x00\x30\x69\xA6\x40\x00"
		  "\x80\x06\x26\x90\xC0\xA8\x01\x02"
		  "\x93\x89\x15\x5E\x0A\x9E\x00\x8B"
		  "\x2D\xC5\x7E\xE0\x00\x00\x00\x00"
		  "\x70\x02\x40\x00\x20\xBF\x00\x00"
		  "\x02\x04\x05\xB4\x01\x01\x04\x02"
		  "\x01\x02\x02\x01",
    .len	= 52,
    .ctext	= "\xFF\x42\x5C\x9B\x72\x45\x99\xDF"
		  "\x7A\x3B\xCD\x51\x01\x94\xE0\x0D"
		  "\x6A\x78\x10\x7F\x1B\x0B\x1C\xBF"
		  "\x06\xEF\xAE\x9D\x65\xA5\xD7\x63"
		  "\x74\x8A\x63\x79\x85\x77\x1D\x34"
		  "\x7F\x05\x45\x65\x9F\x14\xE9\x9D"
		  "\xEF\x84\x2D\x8E",
    .tag	= "\xB3\x35\xF4\xEE\xCF\xDB\xF8\x31"
		  "\x82\x4B\x4C\x49\x15\x95\x6C\x96",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #11",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00",
    .klen	= 20,
    .iv		= "\x00\x00\x00\x00\x00\x00\x00\x00",
    .ivlen	= 8,
    .aad	= "\x00\x00\x00\x00\x00\x00\x00\x01"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
    .aadlen	= 16,
    .ptext	= "\x45\x00\x00\x3C\x99\xC5\x00\x00"
		  "\x80\x01\xCB\x7A\x40\x67\x93\x18"
		  "\x01\x01\x01\x01\x08\x00\x07\x5C"
		  "\x02\x00\x44\x00\x61\x62\x63\x64"
		  "\x65\x66\x67\x68\x69\x6A\x6B\x6C"
		  "\x6D\x6E\x6F\x70\x71\x72\x73\x74"
		  "\x75\x76\x77\x61\x62\x63\x64\x65"
		  "\x66\x67\x68\x69\x01\x02\x02\x01",
    .len	= 64,
    .ctext	= "\x46\x88\xDA\xF2\xF9\x73\xA3\x92"
		  "\x73\x29\x09\xC3\x31\xD5\x6D\x60"
		  "\xF6\x94\xAB\xAA\x41\x4B\x5E\x7F"
		  "\xF5\xFD\xCD\xFF\xF5\xE9\xA2\x84"
		  "\x45\x64\x76\x49\x27\x19\xFF\xB6"
		  "\x4D\xE7\xD9\xDC\xA1\xE1\xD8\x94"
		  "\xBC\x3B\xD5\x78\x73\xED\x4D\x18"
		  "\x1D\x19\xD4\xD5\xC8\xC1\x8A\xF3",
    .tag	= "\xF8\x21\xD4\x96\xEE\xB0\x96\xE9"
		  "\x8A\xD2\xB6\x9E\x47\x99\xC7\x1D",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #12",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\x3D\xE0\x98\x74\xB3\x88\xE6\x49"
		  "\x19\x88\xD0\xC3\x60\x7E\xAE\x1F"
		  "\x57\x69\x0E\x43",
    .klen	= 20,
    .iv		= "\x4E\x28\x00\x00\xA2\xFC\xA1\xA3",
    .ivlen	= 8,
    .aad	= "\x42\xF6\x7E\x3F\x10\x10\x10\x10"
		  "\x10\x10\x10\x10\x4E\x28\x00\x00"
		  "\xA2\xFC\xA1\xA3",
    .aadlen	= 20,
    .ptext	= "\x45\x00\x00\x3C\x99\xC3\x00\x00"
		  "\x80\x01\xCB\x7C\x40\x67\x93\x18"
		  "\x01\x01\x01\x01\x08\x00\x08\x5C"
		  "\x02\x00\x43\x00\x61\x62\x63\x64"
		  "\x65\x66\x67\x68\x69\x6A\x6B\x6C"
		  "\x6D\x6E\x6F\x70\x71\x72\x73\x74"
		  "\x75\x76\x77\x61\x62\x63\x64\x65"
		  "\x66\x67\x68\x69\x01\x02\x02\x01",
    .len	= 64,
    .ctext	= "\xFB\xA2\xCA\xA4\x85\x3C\xF9\xF0"
		  "\xF2\x2C\xB1\x0D\x86\xDD\x83\xB0"
		  "\xFE\xC7\x56\x91\xCF\x1A\x04\xB0"
		  "\x0D\x11\x38\xEC\x9C\x35\x79\x17"
		  "\x65\xAC\xBD\x87\x01\xAD\x79\x84"
		  "\x5B\xF9\xFE\x3F\xBA\x48\x7B\xC9"
		  "\x17\x55\xE6\x66\x2B\x4C\x8D\x0D"
		  "\x1F\x5E\x22\x73\x95\x30\x32\x0A",
    .tag	= "\xE0\xD7\x31\xCC\x97\x8E\xCA\xFA"
		  "\xEA\xE8\x8F\x00\xE8\x0D\x6E\x48",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #13",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\x3D\xE0\x98\x74\xB3\x88\xE6\x49"
		  "\x19\x88\xD0\xC3\x60\x7E\xAE\x1F"
		  "\x57\x69\x0E\x43",
    .klen	= 20,
    .iv		= "\x4E\x28\x00\x00\xA2\xFC\xA1\xA3",
    .ivlen	= 8,
    .aad	= "\x42\xF6\x7E\x3F\x10\x10\x10\x10"
		  "\x10\x10\x10\x10\x4E\x28\x00\x00"
		  "\xA2\xFC\xA1\xA3",
    .aadlen	= 20,
    .ptext	= "\x45\x00\x00\x1C\x42\xA2\x00\x00"
		  "\x80\x01\x44\x1F\x40\x67\x93\xB6"
		  "\xE0\x00\x00\x02\x0A\x00\xF5\xFF"
		  "\x01\x02\x02\x01",
    .len	= 28,
    .ctext	= "\xFB\xA2\xCA\x84\x5E\x5D\xF9\xF0"
		  "\xF2\x2C\x3E\x6E\x86\xDD\x83\x1E"
		  "\x1F\xC6\x57\x92\xCD\x1A\xF9\x13"
		  "\x0E\x13\x79\xED",
    .tag	= "\x36\x9F\x07\x1F\x35\xE0\x34\xBE"
		  "\x95\xF1\x12\xE4\xE7\xD0\x5D\x35",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #14",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\xFE\xFF\xE9\x92\x86\x65\x73\x1C"
		  "\x6D\x6A\x8F\x94\x67\x30\x83\x08"
		  "\xFE\xFF\xE9\x92\x86\x65\x73\x1C"
		  "\xCA\xFE\xBA\xBE",
    .klen	= 28,
    .iv		= "\xFA\xCE\xDB\xAD\xDE\xCA\xF8\x88",
    .ivlen	= 8,
    .aad	= "\x00\x00\xA5\xF8\x00\x00\x00\x0A"
		  "\xFA\xCE\xDB\xAD\xDE\xCA\xF8\x88",
    .aadlen	= 16,
    .ptext	= "\x45\x00\x00\x28\xA4\xAD\x40\x00"
		  "\x40\x06\x78\x80\x0A\x01\x03\x8F"
		  "\x0A\x01\x06\x12\x80\x23\x06\xB8"
		  "\xCB\x71\x26\x02\xDD\x6B\xB0\x3E"
		  "\x50\x10\x16\xD0\x75\x68\x00\x01",
    .len	= 40,
    .ctext	= "\xA5\xB1\xF8\x06\x60\x29\xAE\xA4"
		  "\x0E\x59\x8B\x81\x22\xDE\x02\x42"
		  "\x09\x38\xB3\xAB\x33\xF8\x28\xE6"
		  "\x87\xB8\x85\x8B\x5B\xFB\xDB\xD0"
		  "\x31\x5B\x27\x45\x21\x44\xCC\x77",
    .tag	= "\x95\x45\x7B\x96\x52\x03\x7F\x53"
		  "\x18\x02\x7B\x5B\x4C\xD7\xA6\x36",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #15",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\xAB\xBC\xCD\xDE\xF0\x01\x12\x23"
		  "\x34\x45\x56\x67\x78\x89\x9A\xAB"
		  "\xDE\xCA\xF8\x88",
    .klen	= 20,
    .iv		= "\xCA\xFE\xDE\xBA\xCE\xFA\xCE\x74",
    .ivlen	= 8,
    .aad	= "\x00\x00\x01\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x01\xCA\xFE\xDE\xBA"
		  "\xCE\xFA\xCE\x74",
    .aadlen	= 20,
    .ptext	= "\x45\x00\x00\x49\x33\xBA\x00\x00"
		  "\x7F\x11\x91\x06\xC3\xFB\x1D\x10"
		  "\xC2\xB1\xD3\x26\xC0\x28\x31\xCE"
		  "\x00\x35\xDD\x7B\x80\x03\x02\xD5"
		  "\x00\x00\x4E\x20\x00\x1E\x8C\x18"
		  "\xD7\x5B\x81\xDC\x91\xBA\xA0\x47"
		  "\x6B\x91\xB9\x24\xB2\x80\x38\x9D"
		  "\x92\xC9\x63\xBA\xC0\x46\xEC\x95"
		  "\x9B\x62\x66\xC0\x47\x22\xB1\x49"
		  "\x23\x01\x01\x01",
    .len	= 76,
    .ctext	= "\x18\xA6\xFD\x42\xF7\x2C\xBF\x4A"
		  "\xB2\xA2\xEA\x90\x1F\x73\xD8\x14"
		  "\xE3\xE7\xF2\x43\xD9\x54\x12\xE1"
		  "\xC3\x49\xC1\xD2\xFB\xEC\x16\x8F"
		  "\x91\x90\xFE\xEB\xAF\x2C\xB0\x19"
		  "\x84\xE6\x58\x63\x96\x5D\x74\x72"
		  "\xB7\x9D\xA3\x45\xE0\xE7\x80\x19"
		  "\x1F\x0D\x2F\x0E\x0F\x49\x6C\x22"
		  "\x6F\x21\x27\xB2\x7D\xB3\x57\x24"
		  "\xE7\x84\x5D\x68",
    .tag	= "\x65\x1F\x57\xE6\x5F\x35\x4F\x75"
		  "\xFF\x17\x01\x57\x69\x62\x34\x36",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #16",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\xAB\xBC\xCD\xDE\xF0\x01\x12\x23"
		  "\x34\x45\x56\x67\x78\x89\x9A\xAB"
		  "\xAB\xBC\xCD\xDE\xF0\x01\x12\x23"
		  "\x34\x45\x56\x67\x78\x89\x9A\xAB"
		  "\x73\x61\x6C\x74",
    .klen	= 36,
    .iv		= "\x61\x6E\x64\x01\x69\x76\x65\x63",
    .ivlen	= 8,
    .aad	= "\x17\x40\x5E\x67\x15\x6F\x31\x26"
		  "\xDD\x0D\xB9\x9B\x61\x6E\x64\x01"
		  "\x69\x76\x65\x63",
    .aadlen	= 20,
    .ptext	= "\x45\x08\x00\x28\x73\x2C\x00\x00"
		  "\x40\x06\xE9\xF9\x0A\x01\x06\x12"
		  "\x0A\x01\x03\x8F\x06\xB8\x80\x23"
		  "\xDD\x6B\xAF\xBE\xCB\x71\x26\x02"
		  "\x50\x10\x1F\x64\x6D\x54\x00\x01",
    .len	= 40,
    .ctext	= "\xF2\xD6\x9E\xCD\xBD\x5A\x0D\x5B"
		  "\x8D\x5E\xF3\x8B\xAD\x4D\xA5\x8D"
		  "\x1F\x27\x8F\xDE\x98\xEF\x67\x54"
		  "\x9D\x52\x4A\x30\x18\xD9\xA5\x7F"
		  "\xF4\xD3\xA3\x1C\xE6\x73\x11\x9E",
    .tag	= "\x45\x16\x26\xC2\x41\x57\x71\xE3"
		  "\xB7\xEE\xBC\xA6\x14\xC8\x9B\x35",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #17",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\x3D\xE0\x98\x74\xB3\x88\xE6\x49"
		  "\x19\x88\xD0\xC3\x60\x7E\xAE\x1F"
		  "\x57\x69\x0E\x43",
    .klen	= 20,
    .iv		= "\x4E\x28\x00\x00\xA2\xFC\xA1\xA3",
    .ivlen	= 8,
    .aad	= "\x42\xF6\x7E\x3F\x10\x10\x10\x10"
		  "\x10\x10\x10\x10\x4E\x28\x00\x00"
		  "\xA2\xFC\xA1\xA3",
    .aadlen	= 20,
    .ptext	= "\x45\x00\x00\x49\x33\x3E\x00\x00"
		  "\x7F\x11\x91\x82\xC3\xFB\x1D\x10"
		  "\xC2\xB1\xD3\x26\xC0\x28\x31\xCE"
		  "\x00\x35\xCB\x45\x80\x03\x02\x5B"
		  "\x00\x00\x01\xE0\x00\x1E\x8C\x18"
		  "\xD6\x57\x59\xD5\x22\x84\xA0\x35"
		  "\x2C\x71\x47\x5C\x88\x80\x39\x1C"
		  "\x76\x4D\x6E\x5E\xE0\x49\x6B\x32"
		  "\x5A\xE2\x70\xC0\x38\x99\x49\x39"
		  "\x15\x01\x01\x01",
    .len	= 76,
    .ctext	= "\xFB\xA2\xCA\xD1\x2F\xC1\xF9\xF0"
		  "\x0D\x3C\xEB\xF3\x05\x41\x0D\xB8"
		  "\x3D\x77\x84\xB6\x07\x32\x3D\x22"
		  "\x0F\x24\xB0\xA9\x7D\x54\x18\x28"
		  "\x00\xCA\xDB\x0F\x68\xD9\x9E\xF0"
		  "\xE0\xC0\xC8\x9A\xE9\xBE\xA8\x88"
		  "\x4E\x52\xD6\x5B\xC1\xAF\xD0\x74"
		  "\x0F\x74\x24\x44\x74\x7B\x5B\x39"
		  "\xAB\x53\x31\x63\xAA\xD4\x55\x0E"
		  "\xE5\x16\x09\x75",
    .tag	= "\xCD\xB6\x08\xC5\x76\x91\x89\x60"
		  "\x97\x63\xB8\xE1\x8C\xAA\x81\xE2",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #18",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\xAB\xBC\xCD\xDE\xF0\x01\x12\x23"
		  "\x34\x45\x56\x67\x78\x89\x9A\xAB"
		  "\xAB\xBC\xCD\xDE\xF0\x01\x12\x23"
		  "\x34\x45\x56\x67\x78\x89\x9A\xAB"
		  "\x73\x61\x6C\x74",
    .klen	= 36,
    .iv		= "\x61\x6E\x64\x01\x69\x76\x65\x63",
    .ivlen	= 8,
    .aad	= "\x17\x40\x5E\x67\x15\x6F\x31\x26"
		  "\xDD\x0D\xB9\x9B\x61\x6E\x64\x01"
		  "\x69\x76\x65\x63",
    .aadlen	= 20,
    .ptext	= "\x63\x69\x73\x63\x6F\x01\x72\x75"
		  "\x6C\x65\x73\x01\x74\x68\x65\x01"
		  "\x6E\x65\x74\x77\x65\x01\x64\x65"
		  "\x66\x69\x6E\x65\x01\x74\x68\x65"
		  "\x74\x65\x63\x68\x6E\x6F\x6C\x6F"
		  "\x67\x69\x65\x73\x01\x74\x68\x61"
		  "\x74\x77\x69\x6C\x6C\x01\x64\x65"
		  "\x66\x69\x6E\x65\x74\x6F\x6D\x6F"
		  "\x72\x72\x6F\x77\x01\x02\x02\x01",
    .len	= 72,
    .ctext	= "\xD4\xB7\xED\x86\xA1\x77\x7F\x2E"
		  "\xA1\x3D\x69\x73\xD3\x24\xC6\x9E"
		  "\x7B\x43\xF8\x26\xFB\x56\x83\x12"
		  "\x26\x50\x8B\xEB\xD2\xDC\xEB\x18"
		  "\xD0\xA6\xDF\x10\xE5\x48\x7D\xF0"
		  "\x74\x11\x3E\x14\xC6\x41\x02\x4E"
		  "\x3E\x67\x73\xD9\x1A\x62\xEE\x42"
		  "\x9B\x04\x3A\x10\xE3\xEF\xE6\xB0"
		  "\x12\xA4\x93\x63\x41\x23\x64\xF8",
    .tag	= "\xC0\xCA\xC5\x87\xF2\x49\xE5\x6B"
		  "\x11\xE2\x4F\x30\xE4\x4C\xCC\x76",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #19",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\x7D\x77\x3D\x00\xC1\x44\xC5\x25"
		  "\xAC\x61\x9D\x18\xC8\x4A\x3F\x47"
		  "\xD9\x66\x42\x67",
    .klen	= 20,
    .iv		= "\x43\x45\x7E\x91\x82\x44\x3B\xC6",
    .ivlen	= 8,
    .aad	= "\x33\x54\x67\xAE\xFF\xFF\xFF\xFF"
		  "\x43\x45\x7E\x91\x82\x44\x3B\xC6",
    .aadlen	= 16,
    .ptext	= "\x01\x02\x02\x01",
    .len	= 4,
    .ctext	= "\x43\x7F\x86\x6B",
    .tag	= "\xCB\x3F\x69\x9F\xE9\xB0\x82\x2B"
		  "\xAC\x96\x1C\x45\x04\xBE\xF2\x70",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #20",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\xAB\xBC\xCD\xDE\xF0\x01\x12\x23"
		  "\x34\x45\x56\x67\x78\x89\x9A\xAB"
		  "\xDE\xCA\xF8\x88",
    .klen	= 20,
    .iv		= "\xCA\xFE\xDE\xBA\xCE\xFA\xCE\x74",
    .ivlen	= 8,
    .aad	= "\x00\x00\x01\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x01\xCA\xFE\xDE\xBA"
		  "\xCE\xFA\xCE\x74",
    .aadlen	= 20,
    .ptext	= "\x74\x6F\x01\x62\x65\x01\x6F\x72"
		  "\x01\x6E\x6F\x74\x01\x74\x6F\x01"
		  "\x62\x65\x00\x01",
    .len	= 20,
    .ctext	= "\x29\xC9\xFC\x69\xA1\x97\xD0\x38"
		  "\xCC\xDD\x14\xE2\xDD\xFC\xAA\x05"
		  "\x43\x33\x21\x64",
    .tag	= "\x41\x25\x03\x52\x43\x03\xED\x3C"
		  "\x6C\x5F\x28\x38\x43\xAF\x8C\x3E",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #21",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\x6C\x65\x67\x61\x6C\x69\x7A\x65"
		  "\x6D\x61\x72\x69\x6A\x75\x61\x6E"
		  "\x61\x61\x6E\x64\x64\x6F\x69\x74"
		  "\x62\x65\x66\x6F\x72\x65\x69\x61"
		  "\x74\x75\x72\x6E",
    .klen	= 36,
    .iv		= "\x33\x30\x21\x69\x67\x65\x74\x6D",
    .ivlen	= 8,
    .aad	= "\x79\x6B\x69\x63\xFF\xFF\xFF\xFF"
		  "\xFF\xFF\xFF\xFF\x33\x30\x21\x69"
		  "\x67\x65\x74\x6D",
    .aadlen	= 20,
    .ptext	= "\x45\x00\x00\x30\xDA\x3A\x00\x00"
		  "\x80\x01\xDF\x3B\xC0\xA8\x00\x05"
		  "\xC0\xA8\x00\x01\x08\x00\xC6\xCD"
		  "\x02\x00\x07\x00\x61\x62\x63\x64"
		  "\x65\x66\x67\x68\x69\x6A\x6B\x6C"
		  "\x6D\x6E\x6F\x70\x71\x72\x73\x74"
		  "\x01\x02\x02\x01",
    .len	= 52,
    .ctext	= "\xF9\x7A\xB2\xAA\x35\x6D\x8E\xDC"
		  "\xE1\x76\x44\xAC\x8C\x78\xE2\x5D"
		  "\xD2\x4D\xED\xBB\x29\xEB\xF1\xB6"
		  "\x4A\x27\x4B\x39\xB4\x9C\x3A\x86"
		  "\x4C\xD3\xD7\x8C\xA4\xAE\x68\xA3"
		  "\x2B\x42\x45\x8F\xB5\x7D\xBE\x82"
		  "\x1D\xCC\x63\xB9",
    .tag	= "\xD0\x93\x7B\xA2\x94\x5F\x66\x93"
		  "\x68\x66\x1A\x32\x9F\xB4\xC0\x53",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #22",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\x3D\xE0\x98\x74\xB3\x88\xE6\x49"
		  "\x19\x88\xD0\xC3\x60\x7E\xAE\x1F"
		  "\x57\x69\x0E\x43",
    .klen	= 20,
    .iv		= "\x4E\x28\x00\x00\xA2\xFC\xA1\xA3",
    .ivlen	= 8,
    .aad	= "\x3F\x7E\xF6\x42\x10\x10\x10\x10"
		  "\x10\x10\x10\x10\x4E\x28\x00\x00"
		  "\xA2\xFC\xA1\xA3",
    .aadlen	= 20,
    .ptext	= "\x45\x00\x00\x30\xDA\x3A\x00\x00"
		  "\x80\x01\xDF\x3B\xC0\xA8\x00\x05"
		  "\xC0\xA8\x00\x01\x08\x00\xC6\xCD"
		  "\x02\x00\x07\x00\x61\x62\x63\x64"
		  "\x65\x66\x67\x68\x69\x6A\x6B\x6C"
		  "\x6D\x6E\x6F\x70\x71\x72\x73\x74"
		  "\x01\x02\x02\x01",
    .len	= 52,
    .ctext	= "\xFB\xA2\xCA\xA8\xC6\xC5\xF9\xF0"
		  "\xF2\x2C\xA5\x4A\x06\x12\x10\xAD"
		  "\x3F\x6E\x57\x91\xCF\x1A\xCA\x21"
		  "\x0D\x11\x7C\xEC\x9C\x35\x79\x17"
		  "\x65\xAC\xBD\x87\x01\xAD\x79\x84"
		  "\x5B\xF9\xFE\x3F\xBA\x48\x7B\xC9"
		  "\x63\x21\x93\x06",
    .tag	= "\x84\xEE\xCA\xDB\x56\x91\x25\x46"
		  "\xE7\xA9\x5C\x97\x40\xD7\xCB\x05",
    .tlen	= 16,
  },
  {
    .desc	= "RFC4106 AES-GCM encryption test vector from Linux Kernel #23",
    .alg	= "rfc4106(gcm(aes))",
    .blocklen	= 16,
    .key	= "\x4C\x80\xCD\xEF\xBB\x5D\x10\xDA"
		  "\x90\x6A\xC7\x3C\x36\x13\xA6\x34"
		  "\x22\x43\x3C\x64",
    .klen	= 20,
    .iv		= "\x48\x55\xEC\x7D\x3A\x23\x4B\xFD",
    .ivlen	= 8,
    .aad	= "\x00\x00\x43\x21\x87\x65\x43\x21"
		  "\x00\x00\x00\x07\x48\x55\xEC\x7D"
		  "\x3A\x23\x4B\xFD",
    .aadlen	= 20,
    .ptext	= "\x08\x00\xC6\xCD\x02\x00\x07\x00"
		  "\x61\x62\x63\x64\x65\x66\x67\x68"
		  "\x69\x6A\x6B\x6C\x6D\x6E\x6F\x70"
		  "\x71\x72\x73\x74\x01\x02\x02\x01",
    .len	= 32,
    .ctext	= "\x74\x75\x2E\x8A\xEB\x5D\x87\x3C"
		  "\xD7\xC0\xF4\xAC\xC3\x6C\x4B\xFF"
		  "\x84\xB7\xD7\xB9\x8F\x0C\xA8\xB6"
		  "\xAC\xDA\x68\x94\xBC\x61\x90\x69",
    .tag	= "\xEF\x9C\xBC\x28\xFE\x1B\x56\xA7"
		  "\xC4\xE0\xD5\x8C\x86\xCD\x2B\xC0",
    .tlen	= 16,
  },
#ifdef AFALG_UNNOFICIAL_TESTS
  {
    .desc	= "Unnoficial test, from RFC3686#5: 32 bytes using 3DES-CBC",
    .alg	= "cbc(des3_ede)",
    .blocklen	= 8,
    .key	= "\x7C\x5C\xB2\x40\x1B\x3D\xC3\x3C"
		  "\x19\xE7\x34\x08\x19\xE0\xF6\x9C"
		  "\x67\x8C\x3D\xB8\xE6\xF6\xA9\x1A",
    .klen	= 24,
    .iv		= "\x02\x0C\x6E\xAD\xC2\xCB\x50\x0D",
    .ivlen	= 8,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F",
    .len	= 32,
    .ctext	= "\x74\x41\x79\xf4\x53\x74\x1f\x68"
		  "\xb3\x60\xab\xf5\x4f\x93\xd9\x96"
		  "\x07\x40\x28\x71\xb0\x45\xab\xe3"
		  "\xad\xdf\xc9\x29\x41\x34\x31\x2f",
  }, {
    .desc	= "Unnoficial test, from RFC3686#5 (key truncated): 32 bytes using DES-CBC",
    .alg	= "cbc(des)",
    .blocklen	= 8,
    .key	= "\x7C\x5C\xB2\x40\x1B\x3D\xC3\x3C",
    .klen	= 8,
    .iv		= "\x02\x0C\x6E\xAD\xC2\xCB\x50\x0D",
    .ivlen	= 8,
    .ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F",
    .len	= 32,
    .ctext	= "\x5e\x3c\xb3\xf2\x8e\x68\xe0\x75"
		  "\xb4\x54\x39\xaf\xa7\xd6\x79\x70"
		  "\x02\xb7\x5d\x83\x98\xe8\x5a\xe3"
		  "\x32\x24\xa5\x96\x96\xc6\xcb\x4c",
  },
#endif
  { 0 },
};
